{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isExcluded",
          "type": "bool"
        }
      ],
      "name": "ExcludedFromFeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isMarketPair",
          "type": "bool"
        }
      ],
      "name": "MarketPairUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newProtocolAddress",
          "type": "address"
        }
      ],
      "name": "ProtocolAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TradingOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTradingOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellTax",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletStates",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isMarketPair",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isExemptFromTax",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account_",
          "type": "address"
        }
      ],
      "name": "isTaxExempt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTaxEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isExempt",
          "type": "bool"
        }
      ],
      "name": "setTaxExempt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newProtocolAddress_",
          "type": "address"
        }
      ],
      "name": "setTaxAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setMarketPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"ExcludedFromFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMarketPair\",\"type\":\"bool\"}],\"name\":\"MarketPairUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newProtocolAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TradingOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTaxEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"}],\"name\":\"isTaxExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setMarketPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolAddress_\",\"type\":\"address\"}],\"name\":\"setTaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isExempt\",\"type\":\"bool\"}],\"name\":\"setTaxExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletStates\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isMarketPair\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isExemptFromTax\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTaxEnabled()\":{\"notice\":\"Returns if the tax is enabled or not. Tax only exists on market pairs.\"},\"isTaxExempt(address)\":{\"notice\":\"Returns if an address is excluded from tax.\"},\"openTrading()\":{\"notice\":\"Opens the trading, enabling taxes. Can only be called once.\"},\"setTaxAddress(address)\":{\"notice\":\"Set the receiver of platform taxes.\"},\"setTaxExempt(address,bool)\":{\"notice\":\"Sets an address's tax exempt status.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"project:/contracts/Token.sol\":{\"keccak256\":\"0xfe351b449805bf675ae20b0c94346330504a35ef2882008d1b62c5e038103b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1f545c057723a6d7e850794046659fdf496720035b6cec3f90ae2cc6142b591\",\"dweb:/ipfs/QmaKxuZg6kw2gW8t8PLt4NNuWNZSSK3msjoXUAo9oPcXAW\"]}},\"version\":1}",
  "bytecode": "0x6080604052600a60075f6101000a81548160ff021916908360ff1602179055506001600760016101000a81548160ff0219169083151502179055505f600760026101000a81548160ff0219169083151502179055505f600760036101000a81548160ff0219169083151502179055503480156200007a575f80fd5b50336040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e00000000000000000000000000000000000000000000000000000000008152508160039081620000f991906200104e565b5080600490816200010b91906200104e565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000181575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000178919062001175565b60405180910390fd5b62000192816200067560201b60201c565b50620001b25f336b033b2e3c9fd0803ce80000006200073860201b60201c565b5f737a250d5630b4cf539739df2c5dacb4c659f2488d90505f8190505f8173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000219573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200023f9190620011c3565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396308473ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002a5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002cb9190620011c3565b6040518363ffffffff1660e01b8152600401620002ea929190620011f3565b6020604051808303815f875af115801562000307573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200032d9190620011c3565b905081600760046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003a330847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6200095c60201b60201c565b620003b68160016200097660201b60201c565b3360085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180604001604052805f151581526020016001151581525060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507fe4cbcfb1a60e2c589f335f74c6c57b0be57eb6c50eb56442d8a67735dba70cad336001604051620004c09291906200123a565b60405180910390a160405180604001604052805f151581526020016001151581525060065f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507fe4cbcfb1a60e2c589f335f74c6c57b0be57eb6c50eb56442d8a67735dba70cad306001604051620005929291906200123a565b60405180910390a160405180604001604052805f151581526020016001151581525060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507fe4cbcfb1a60e2c589f335f74c6c57b0be57eb6c50eb56442d8a67735dba70cad836001604051620006649291906200123a565b60405180910390a1505050620013b1565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200078c578060025f8282546200077f919062001292565b925050819055506200085d565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000818578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200080f93929190620012dd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620008a6578060025f8282540392505081905550620008f0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200094f919062001318565b60405180910390a3505050565b62000971838383600162000b4160201b60201c565b505050565b6200098662000d1960201b60201c565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620009f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009ee9062001391565b60405180910390fd5b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581525050905081815f0190151590811515815250508060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507f160ff69a72bc70f3e792a86c87d27070e421562197f032d96bcab11c5010222e838360405162000b349291906200123a565b60405180910390a1505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160362000bb4575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040162000bab919062001175565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000c27575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040162000c1e919062001175565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801562000d13578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405162000d0a919062001318565b60405180910390a35b50505050565b62000d2962000dbb60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1662000d4f62000dc260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000db95762000d7b62000dbb60201b60201c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040162000db0919062001175565b60405180910390fd5b565b5f33905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168062000e6657607f821691505b60208210810362000e7c5762000e7b62000e21565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000ee07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000ea3565b62000eec868362000ea3565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000f3662000f3062000f2a8462000f04565b62000f0d565b62000f04565b9050919050565b5f819050919050565b62000f518362000f16565b62000f6962000f608262000f3d565b84845462000eaf565b825550505050565b5f90565b62000f7f62000f71565b62000f8c81848462000f46565b505050565b5b8181101562000fb35762000fa75f8262000f75565b60018101905062000f92565b5050565b601f821115620010025762000fcc8162000e82565b62000fd78462000e94565b8101602085101562000fe7578190505b62000fff62000ff68562000e94565b83018262000f91565b50505b505050565b5f82821c905092915050565b5f620010245f198460080262001007565b1980831691505092915050565b5f6200103e838362001013565b9150826002028217905092915050565b620010598262000dea565b67ffffffffffffffff81111562001075576200107462000df4565b5b62001081825462000e4e565b6200108e82828562000fb7565b5f60209050601f831160018114620010c4575f8415620010af578287015190505b620010bb858262001031565b8655506200112a565b601f198416620010d48662000e82565b5f5b82811015620010fd57848901518255600182019150602085019450602081019050620010d6565b868310156200111d578489015162001119601f89168262001013565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200115d8262001132565b9050919050565b6200116f8162001151565b82525050565b5f6020820190506200118a5f83018462001164565b92915050565b5f80fd5b6200119f8162001151565b8114620011aa575f80fd5b50565b5f81519050620011bd8162001194565b92915050565b5f60208284031215620011db57620011da62001190565b5b5f620011ea84828501620011ad565b91505092915050565b5f604082019050620012085f83018562001164565b62001217602083018462001164565b9392505050565b5f8115159050919050565b62001234816200121e565b82525050565b5f6040820190506200124f5f83018562001164565b6200125e602083018462001229565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200129e8262000f04565b9150620012ab8362000f04565b9250828201905080821115620012c657620012c562001265565b5b92915050565b620012d78162000f04565b82525050565b5f606082019050620012f25f83018662001164565b620013016020830185620012cc565b620013106040830184620012cc565b949350505050565b5f6020820190506200132d5f830184620012cc565b92915050565b5f82825260208201905092915050565b7f63616e74206368616e676520636f6e74726163740000000000000000000000005f82015250565b5f6200137960148362001333565b9150620013868262001343565b602082019050919050565b5f6020820190508181035f830152620013aa816200136b565b9050919050565b61206b80620013bf5f395ff3fe608060405260043610610143575f3560e01c8063715018a6116100b5578063c16dd4a41161006e578063c16dd4a41461046d578063c9567bf914610495578063cc1776d3146104ab578063dd62ed3e146104d5578063e6c1909b14610511578063f2fde38b1461053b5761014a565b8063715018a6146103625780638da5cb5b1461037857806395d89b41146103a257806398962f36146103cc578063a1883d2614610409578063a9059cbb146104315761014a565b806318160ddd1161010757806318160ddd146102445780631dc610401461026e57806323b872dd14610296578063313ce567146102d257806356a060a2146102fc57806370a08231146103265761014a565b80630676c1b71461014e57806306fdde0314610178578063095ea7b3146101a25780631694505e146101de57806316c2be6b146102085761014a565b3661014a57005b5f80fd5b348015610159575f80fd5b50610162610563565b60405161016f9190611870565b60405180910390f35b348015610183575f80fd5b5061018c610588565b6040516101999190611913565b60405180910390f35b3480156101ad575f80fd5b506101c860048036038101906101c39190611994565b610618565b6040516101d591906119ec565b60405180910390f35b3480156101e9575f80fd5b506101f261063a565b6040516101ff9190611a60565b60405180910390f35b348015610213575f80fd5b5061022e60048036038101906102299190611a79565b610660565b60405161023b91906119ec565b60405180910390f35b34801561024f575f80fd5b506102586106b5565b6040516102659190611ab3565b60405180910390f35b348015610279575f80fd5b50610294600480360381019061028f9190611af6565b6106be565b005b3480156102a1575f80fd5b506102bc60048036038101906102b79190611b34565b61087d565b6040516102c991906119ec565b60405180910390f35b3480156102dd575f80fd5b506102e66108ab565b6040516102f39190611b9f565b60405180910390f35b348015610307575f80fd5b506103106108b3565b60405161031d91906119ec565b60405180910390f35b348015610331575f80fd5b5061034c60048036038101906103479190611a79565b6108c6565b6040516103599190611ab3565b60405180910390f35b34801561036d575f80fd5b5061037661090b565b005b348015610383575f80fd5b5061038c61091e565b6040516103999190611870565b60405180910390f35b3480156103ad575f80fd5b506103b6610946565b6040516103c39190611913565b60405180910390f35b3480156103d7575f80fd5b506103f260048036038101906103ed9190611a79565b6109d6565b604051610400929190611bb8565b60405180910390f35b348015610414575f80fd5b5061042f600480360381019061042a9190611a79565b610a0e565b005b34801561043c575f80fd5b5061045760048036038101906104529190611994565b610a90565b60405161046491906119ec565b60405180910390f35b348015610478575f80fd5b50610493600480360381019061048e9190611af6565b610ab2565b005b3480156104a0575f80fd5b506104a9610c70565b005b3480156104b6575f80fd5b506104bf610d31565b6040516104cc9190611b9f565b60405180910390f35b3480156104e0575f80fd5b506104fb60048036038101906104f69190611bdf565b610d43565b6040516105089190611ab3565b60405180910390f35b34801561051c575f80fd5b50610525610dc5565b60405161053291906119ec565b60405180910390f35b348015610546575f80fd5b50610561600480360381019061055c9190611a79565b610ddb565b005b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805461059790611c4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390611c4a565b801561060e5780601f106105e55761010080835404028352916020019161060e565b820191905f5260205f20905b8154815290600101906020018083116105f157829003601f168201915b5050505050905090565b5f80610622610e5f565b905061062f818585610e66565b600191505092915050565b600760049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff169050919050565b5f600254905090565b6106c6610e78565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b90611cc4565b60405180910390fd5b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff1615151515815250509050818160200190151590811515815250508060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507fe4cbcfb1a60e2c589f335f74c6c57b0be57eb6c50eb56442d8a67735dba70cad8383604051610870929190611ce2565b60405180910390a1505050565b5f80610887610e5f565b9050610894858285610eff565b61089f858585610f91565b60019150509392505050565b5f6012905090565b600760029054906101000a900460ff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610913610e78565b61091c5f611081565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461095590611c4a565b80601f016020809104026020016040519081016040528092919081815260200182805461098190611c4a565b80156109cc5780601f106109a3576101008083540402835291602001916109cc565b820191905f5260205f20905b8154815290600101906020018083116109af57829003601f168201915b5050505050905090565b6006602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a900460ff16905082565b610a16610e78565b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f725168acf8fb2c310e106a05c2eed321da0de2fc4cf73dfe2594ca1d4795fd1081604051610a859190611870565b60405180910390a150565b5f80610a9a610e5f565b9050610aa7818585610f91565b600191505092915050565b610aba610e78565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1f90611d53565b60405180910390fd5b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581525050905081815f0190151590811515815250508060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507f160ff69a72bc70f3e792a86c87d27070e421562197f032d96bcab11c5010222e8383604051610c63929190611ce2565b60405180910390a1505050565b610c78610e78565b5f1515600760029054906101000a900460ff16151514610ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc490611dbb565b60405180910390fd5b6001600760026101000a81548160ff021916908315150217905550600a60075f6101000a81548160ff021916908360ff1602179055507f08fd3d05bd9c1e39a2044b0a4e2fed4621113adaeeae8fc57e9f4a06777ecf0760405160405180910390a1565b60075f9054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600760019054906101000a900460ff16905090565b610de3610e78565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e53575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e4a9190611870565b60405180910390fd5b610e5c81611081565b50565b5f33905090565b610e738383836001611144565b505050565b610e80610e5f565b73ffffffffffffffffffffffffffffffffffffffff16610e9e61091e565b73ffffffffffffffffffffffffffffffffffffffff1614610efd57610ec1610e5f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef49190611870565b60405180910390fd5b565b5f610f0a8484610d43565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f8b5781811015610f7c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f7393929190611dd9565b60405180910390fd5b610f8a84848484035f611144565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611001575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ff89190611870565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611071575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110689190611870565b60405180910390fd5b61107c838383611313565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111b4575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111ab9190611870565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611224575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161121b9190611870565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561130d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113049190611ab3565b60405180910390a35b50505050565b5f61131d846108c6565b905081811015611362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135990611e7e565b60405180910390fd5b5f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff16151515158152505090505f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff16151515158152505090505f826020015180611470575081602001515b90505f835f0151806114825750825f01515b1561155157600760029054906101000a900460ff16806114d457506114a561091e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061151157506114e261091e565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b611550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154790611ee6565b60405180910390fd5b5b825f0151801561156457505f1515821515145b801561157c5750600760019054906101000a900460ff165b156115b157606460075f9054906101000a900460ff1660ff16876115a09190611f31565b6115aa9190611f9f565b90506115b5565b5f90505b5f81141580156115d757505f1515600760039054906101000a900460ff161515145b15611602576115f2888883896115ed9190611fcf565b611618565b6115fd883083611618565b61160e565b61160d888888611618565b5b5050505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611668578060025f82825461165c9190612002565b92505081905550611736565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116f1578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116e893929190611dd9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361177d578060025f82825403925050819055506117c7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118249190611ab3565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61185a82611831565b9050919050565b61186a81611850565b82525050565b5f6020820190506118835f830184611861565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156118c05780820151818401526020810190506118a5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118e582611889565b6118ef8185611893565b93506118ff8185602086016118a3565b611908816118cb565b840191505092915050565b5f6020820190508181035f83015261192b81846118db565b905092915050565b5f80fd5b61194081611850565b811461194a575f80fd5b50565b5f8135905061195b81611937565b92915050565b5f819050919050565b61197381611961565b811461197d575f80fd5b50565b5f8135905061198e8161196a565b92915050565b5f80604083850312156119aa576119a9611933565b5b5f6119b78582860161194d565b92505060206119c885828601611980565b9150509250929050565b5f8115159050919050565b6119e6816119d2565b82525050565b5f6020820190506119ff5f8301846119dd565b92915050565b5f819050919050565b5f611a28611a23611a1e84611831565b611a05565b611831565b9050919050565b5f611a3982611a0e565b9050919050565b5f611a4a82611a2f565b9050919050565b611a5a81611a40565b82525050565b5f602082019050611a735f830184611a51565b92915050565b5f60208284031215611a8e57611a8d611933565b5b5f611a9b8482850161194d565b91505092915050565b611aad81611961565b82525050565b5f602082019050611ac65f830184611aa4565b92915050565b611ad5816119d2565b8114611adf575f80fd5b50565b5f81359050611af081611acc565b92915050565b5f8060408385031215611b0c57611b0b611933565b5b5f611b198582860161194d565b9250506020611b2a85828601611ae2565b9150509250929050565b5f805f60608486031215611b4b57611b4a611933565b5b5f611b588682870161194d565b9350506020611b698682870161194d565b9250506040611b7a86828701611980565b9150509250925092565b5f60ff82169050919050565b611b9981611b84565b82525050565b5f602082019050611bb25f830184611b90565b92915050565b5f604082019050611bcb5f8301856119dd565b611bd860208301846119dd565b9392505050565b5f8060408385031215611bf557611bf4611933565b5b5f611c028582860161194d565b9250506020611c138582860161194d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c6157607f821691505b602082108103611c7457611c73611c1d565b5b50919050565b7f43616e2774206368616e676520636f6e747261637400000000000000000000005f82015250565b5f611cae601583611893565b9150611cb982611c7a565b602082019050919050565b5f6020820190508181035f830152611cdb81611ca2565b9050919050565b5f604082019050611cf55f830185611861565b611d0260208301846119dd565b9392505050565b7f63616e74206368616e676520636f6e74726163740000000000000000000000005f82015250565b5f611d3d601483611893565b9150611d4882611d09565b602082019050919050565b5f6020820190508181035f830152611d6a81611d31565b9050919050565b7f54726164696e6720616c7265616479206f70656e0000000000000000000000005f82015250565b5f611da5601483611893565b9150611db082611d71565b602082019050919050565b5f6020820190508181035f830152611dd281611d99565b9050919050565b5f606082019050611dec5f830186611861565b611df96020830185611aa4565b611e066040830184611aa4565b949350505050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611e68602683611893565b9150611e7382611e0e565b604082019050919050565b5f6020820190508181035f830152611e9581611e5c565b9050919050565b7f546f6b656e3a2054726164696e67206e6f74206f70656e2079657400000000005f82015250565b5f611ed0601b83611893565b9150611edb82611e9c565b602082019050919050565b5f6020820190508181035f830152611efd81611ec4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f3b82611961565b9150611f4683611961565b9250828202611f5481611961565b91508282048414831517611f6b57611f6a611f04565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611fa982611961565b9150611fb483611961565b925082611fc457611fc3611f72565b5b828204905092915050565b5f611fd982611961565b9150611fe483611961565b9250828203905081811115611ffc57611ffb611f04565b5b92915050565b5f61200c82611961565b915061201783611961565b925082820190508082111561202f5761202e611f04565b5b9291505056fea26469706673582212200e50aaff78809fc605ed3f2eefa5f49804f25c117c7f49457822c2591c7bd50264736f6c63430008140033",
  "deployedBytecode": "0x608060405260043610610143575f3560e01c8063715018a6116100b5578063c16dd4a41161006e578063c16dd4a41461046d578063c9567bf914610495578063cc1776d3146104ab578063dd62ed3e146104d5578063e6c1909b14610511578063f2fde38b1461053b5761014a565b8063715018a6146103625780638da5cb5b1461037857806395d89b41146103a257806398962f36146103cc578063a1883d2614610409578063a9059cbb146104315761014a565b806318160ddd1161010757806318160ddd146102445780631dc610401461026e57806323b872dd14610296578063313ce567146102d257806356a060a2146102fc57806370a08231146103265761014a565b80630676c1b71461014e57806306fdde0314610178578063095ea7b3146101a25780631694505e146101de57806316c2be6b146102085761014a565b3661014a57005b5f80fd5b348015610159575f80fd5b50610162610563565b60405161016f9190611870565b60405180910390f35b348015610183575f80fd5b5061018c610588565b6040516101999190611913565b60405180910390f35b3480156101ad575f80fd5b506101c860048036038101906101c39190611994565b610618565b6040516101d591906119ec565b60405180910390f35b3480156101e9575f80fd5b506101f261063a565b6040516101ff9190611a60565b60405180910390f35b348015610213575f80fd5b5061022e60048036038101906102299190611a79565b610660565b60405161023b91906119ec565b60405180910390f35b34801561024f575f80fd5b506102586106b5565b6040516102659190611ab3565b60405180910390f35b348015610279575f80fd5b50610294600480360381019061028f9190611af6565b6106be565b005b3480156102a1575f80fd5b506102bc60048036038101906102b79190611b34565b61087d565b6040516102c991906119ec565b60405180910390f35b3480156102dd575f80fd5b506102e66108ab565b6040516102f39190611b9f565b60405180910390f35b348015610307575f80fd5b506103106108b3565b60405161031d91906119ec565b60405180910390f35b348015610331575f80fd5b5061034c60048036038101906103479190611a79565b6108c6565b6040516103599190611ab3565b60405180910390f35b34801561036d575f80fd5b5061037661090b565b005b348015610383575f80fd5b5061038c61091e565b6040516103999190611870565b60405180910390f35b3480156103ad575f80fd5b506103b6610946565b6040516103c39190611913565b60405180910390f35b3480156103d7575f80fd5b506103f260048036038101906103ed9190611a79565b6109d6565b604051610400929190611bb8565b60405180910390f35b348015610414575f80fd5b5061042f600480360381019061042a9190611a79565b610a0e565b005b34801561043c575f80fd5b5061045760048036038101906104529190611994565b610a90565b60405161046491906119ec565b60405180910390f35b348015610478575f80fd5b50610493600480360381019061048e9190611af6565b610ab2565b005b3480156104a0575f80fd5b506104a9610c70565b005b3480156104b6575f80fd5b506104bf610d31565b6040516104cc9190611b9f565b60405180910390f35b3480156104e0575f80fd5b506104fb60048036038101906104f69190611bdf565b610d43565b6040516105089190611ab3565b60405180910390f35b34801561051c575f80fd5b50610525610dc5565b60405161053291906119ec565b60405180910390f35b348015610546575f80fd5b50610561600480360381019061055c9190611a79565b610ddb565b005b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805461059790611c4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390611c4a565b801561060e5780601f106105e55761010080835404028352916020019161060e565b820191905f5260205f20905b8154815290600101906020018083116105f157829003601f168201915b5050505050905090565b5f80610622610e5f565b905061062f818585610e66565b600191505092915050565b600760049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff169050919050565b5f600254905090565b6106c6610e78565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b90611cc4565b60405180910390fd5b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff1615151515815250509050818160200190151590811515815250508060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507fe4cbcfb1a60e2c589f335f74c6c57b0be57eb6c50eb56442d8a67735dba70cad8383604051610870929190611ce2565b60405180910390a1505050565b5f80610887610e5f565b9050610894858285610eff565b61089f858585610f91565b60019150509392505050565b5f6012905090565b600760029054906101000a900460ff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610913610e78565b61091c5f611081565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461095590611c4a565b80601f016020809104026020016040519081016040528092919081815260200182805461098190611c4a565b80156109cc5780601f106109a3576101008083540402835291602001916109cc565b820191905f5260205f20905b8154815290600101906020018083116109af57829003601f168201915b5050505050905090565b6006602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a900460ff16905082565b610a16610e78565b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f725168acf8fb2c310e106a05c2eed321da0de2fc4cf73dfe2594ca1d4795fd1081604051610a859190611870565b60405180910390a150565b5f80610a9a610e5f565b9050610aa7818585610f91565b600191505092915050565b610aba610e78565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1f90611d53565b60405180910390fd5b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581525050905081815f0190151590811515815250508060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055509050507f160ff69a72bc70f3e792a86c87d27070e421562197f032d96bcab11c5010222e8383604051610c63929190611ce2565b60405180910390a1505050565b610c78610e78565b5f1515600760029054906101000a900460ff16151514610ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc490611dbb565b60405180910390fd5b6001600760026101000a81548160ff021916908315150217905550600a60075f6101000a81548160ff021916908360ff1602179055507f08fd3d05bd9c1e39a2044b0a4e2fed4621113adaeeae8fc57e9f4a06777ecf0760405160405180910390a1565b60075f9054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600760019054906101000a900460ff16905090565b610de3610e78565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e53575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e4a9190611870565b60405180910390fd5b610e5c81611081565b50565b5f33905090565b610e738383836001611144565b505050565b610e80610e5f565b73ffffffffffffffffffffffffffffffffffffffff16610e9e61091e565b73ffffffffffffffffffffffffffffffffffffffff1614610efd57610ec1610e5f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef49190611870565b60405180910390fd5b565b5f610f0a8484610d43565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f8b5781811015610f7c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f7393929190611dd9565b60405180910390fd5b610f8a84848484035f611144565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611001575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ff89190611870565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611071575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110689190611870565b60405180910390fd5b61107c838383611313565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111b4575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111ab9190611870565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611224575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161121b9190611870565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561130d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113049190611ab3565b60405180910390a35b50505050565b5f61131d846108c6565b905081811015611362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135990611e7e565b60405180910390fd5b5f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff16151515158152505090505f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff16151515158152505090505f826020015180611470575081602001515b90505f835f0151806114825750825f01515b1561155157600760029054906101000a900460ff16806114d457506114a561091e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061151157506114e261091e565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b611550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154790611ee6565b60405180910390fd5b5b825f0151801561156457505f1515821515145b801561157c5750600760019054906101000a900460ff165b156115b157606460075f9054906101000a900460ff1660ff16876115a09190611f31565b6115aa9190611f9f565b90506115b5565b5f90505b5f81141580156115d757505f1515600760039054906101000a900460ff161515145b15611602576115f2888883896115ed9190611fcf565b611618565b6115fd883083611618565b61160e565b61160d888888611618565b5b5050505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611668578060025f82825461165c9190612002565b92505081905550611736565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116f1578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116e893929190611dd9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361177d578060025f82825403925050819055506117c7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118249190611ab3565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61185a82611831565b9050919050565b61186a81611850565b82525050565b5f6020820190506118835f830184611861565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156118c05780820151818401526020810190506118a5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118e582611889565b6118ef8185611893565b93506118ff8185602086016118a3565b611908816118cb565b840191505092915050565b5f6020820190508181035f83015261192b81846118db565b905092915050565b5f80fd5b61194081611850565b811461194a575f80fd5b50565b5f8135905061195b81611937565b92915050565b5f819050919050565b61197381611961565b811461197d575f80fd5b50565b5f8135905061198e8161196a565b92915050565b5f80604083850312156119aa576119a9611933565b5b5f6119b78582860161194d565b92505060206119c885828601611980565b9150509250929050565b5f8115159050919050565b6119e6816119d2565b82525050565b5f6020820190506119ff5f8301846119dd565b92915050565b5f819050919050565b5f611a28611a23611a1e84611831565b611a05565b611831565b9050919050565b5f611a3982611a0e565b9050919050565b5f611a4a82611a2f565b9050919050565b611a5a81611a40565b82525050565b5f602082019050611a735f830184611a51565b92915050565b5f60208284031215611a8e57611a8d611933565b5b5f611a9b8482850161194d565b91505092915050565b611aad81611961565b82525050565b5f602082019050611ac65f830184611aa4565b92915050565b611ad5816119d2565b8114611adf575f80fd5b50565b5f81359050611af081611acc565b92915050565b5f8060408385031215611b0c57611b0b611933565b5b5f611b198582860161194d565b9250506020611b2a85828601611ae2565b9150509250929050565b5f805f60608486031215611b4b57611b4a611933565b5b5f611b588682870161194d565b9350506020611b698682870161194d565b9250506040611b7a86828701611980565b9150509250925092565b5f60ff82169050919050565b611b9981611b84565b82525050565b5f602082019050611bb25f830184611b90565b92915050565b5f604082019050611bcb5f8301856119dd565b611bd860208301846119dd565b9392505050565b5f8060408385031215611bf557611bf4611933565b5b5f611c028582860161194d565b9250506020611c138582860161194d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c6157607f821691505b602082108103611c7457611c73611c1d565b5b50919050565b7f43616e2774206368616e676520636f6e747261637400000000000000000000005f82015250565b5f611cae601583611893565b9150611cb982611c7a565b602082019050919050565b5f6020820190508181035f830152611cdb81611ca2565b9050919050565b5f604082019050611cf55f830185611861565b611d0260208301846119dd565b9392505050565b7f63616e74206368616e676520636f6e74726163740000000000000000000000005f82015250565b5f611d3d601483611893565b9150611d4882611d09565b602082019050919050565b5f6020820190508181035f830152611d6a81611d31565b9050919050565b7f54726164696e6720616c7265616479206f70656e0000000000000000000000005f82015250565b5f611da5601483611893565b9150611db082611d71565b602082019050919050565b5f6020820190508181035f830152611dd281611d99565b9050919050565b5f606082019050611dec5f830186611861565b611df96020830185611aa4565b611e066040830184611aa4565b949350505050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611e68602683611893565b9150611e7382611e0e565b604082019050919050565b5f6020820190508181035f830152611e9581611e5c565b9050919050565b7f546f6b656e3a2054726164696e67206e6f74206f70656e2079657400000000005f82015250565b5f611ed0601b83611893565b9150611edb82611e9c565b602082019050919050565b5f6020820190508181035f830152611efd81611ec4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f3b82611961565b9150611f4683611961565b9250828202611f5481611961565b91508282048414831517611f6b57611f6a611f04565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611fa982611961565b9150611fb483611961565b925082611fc457611fc3611f72565b5b828204905092915050565b5f611fd982611961565b9150611fe483611961565b9250828203905081811115611ffc57611ffb611f04565b5b92915050565b5f61200c82611961565b915061201783611961565b925082820190508082111561202f5761202e611f04565b5b9291505056fea26469706673582212200e50aaff78809fc605ed3f2eefa5f49804f25c117c7f49457822c2591c7bd50264736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9984:15",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:15",
                "type": ""
              }
            ],
            "src": "7:99:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "140:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "157:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "150:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "150:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "150:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "254:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "257:4:15",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "247:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "247:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "278:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "281:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "271:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "271:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "271:15:15"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "112:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "326:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "346:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "336:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "336:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:4:15",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "433:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "433:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "467:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "457:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:15:15"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "298:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "535:269:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "545:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "559:4:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "565:1:15",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "555:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "555:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "545:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "576:38:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "606:4:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "612:1:15",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "602:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:12:15"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "580:18:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "653:51:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "667:27:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "681:6:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:4:15",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "677:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "677:17:15"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "667:6:15"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "633:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "626:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:26:15"
                  },
                  "nodeType": "YulIf",
                  "src": "623:81:15"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "756:42:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "770:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "770:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "770:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "720:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "751:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "740:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:14:15"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "717:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:38:15"
                  },
                  "nodeType": "YulIf",
                  "src": "714:84:15"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "519:4:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "528:6:15",
                "type": ""
              }
            ],
            "src": "484:320:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "864:87:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "874:11:15",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "882:3:15"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "874:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "902:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "905:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "895:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:14:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:14:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "918:26:15",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "939:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "926:9:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "918:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "851:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "859:4:15",
                "type": ""
              }
            ],
            "src": "810:141:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1001:49:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1011:33:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1029:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1025:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:14:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1041:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1021:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:23:15"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1011:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "divide_by_32_ceil",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "984:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "994:6:15",
                "type": ""
              }
            ],
            "src": "957:93:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1109:54:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1119:37:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "bits",
                        "nodeType": "YulIdentifier",
                        "src": "1144:4:15"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1150:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:16:15"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "1119:8:15"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "bits",
                "nodeType": "YulTypedName",
                "src": "1084:4:15",
                "type": ""
              },
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1090:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "1100:8:15",
                "type": ""
              }
            ],
            "src": "1056:107:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1245:317:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1255:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBytes",
                        "nodeType": "YulIdentifier",
                        "src": "1276:10:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:1:15",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "1272:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:18:15"
                  },
                  "variables": [
                    {
                      "name": "shiftBits",
                      "nodeType": "YulTypedName",
                      "src": "1259:9:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1299:109:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBits",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1341:66:15",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "1311:18:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:97:15"
                  },
                  "variables": [
                    {
                      "name": "mask",
                      "nodeType": "YulTypedName",
                      "src": "1303:4:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1417:51:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "shiftBits",
                        "nodeType": "YulIdentifier",
                        "src": "1448:9:15"
                      },
                      {
                        "name": "toInsert",
                        "nodeType": "YulIdentifier",
                        "src": "1459:8:15"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "1429:18:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1429:39:15"
                  },
                  "variableNames": [
                    {
                      "name": "toInsert",
                      "nodeType": "YulIdentifier",
                      "src": "1417:8:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1477:30:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1490:5:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "mask",
                            "nodeType": "YulIdentifier",
                            "src": "1501:4:15"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:9:15"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1486:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:21:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1477:5:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:40:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1529:5:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "toInsert",
                            "nodeType": "YulIdentifier",
                            "src": "1540:8:15"
                          },
                          {
                            "name": "mask",
                            "nodeType": "YulIdentifier",
                            "src": "1550:4:15"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:19:15"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1526:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:30:15"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1516:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "update_byte_slice_dynamic32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1206:5:15",
                "type": ""
              },
              {
                "name": "shiftBytes",
                "nodeType": "YulTypedName",
                "src": "1213:10:15",
                "type": ""
              },
              {
                "name": "toInsert",
                "nodeType": "YulTypedName",
                "src": "1225:8:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1238:6:15",
                "type": ""
              }
            ],
            "src": "1169:393:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1613:32:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1623:16:15",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1634:5:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1623:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1595:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1605:7:15",
                "type": ""
              }
            ],
            "src": "1568:77:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1683:28:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1693:12:15",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1700:5:15"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1693:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1669:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1679:3:15",
                "type": ""
              }
            ],
            "src": "1651:60:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1777:82:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1787:66:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1845:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1827:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1827:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1818:8:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1818:34:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1800:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:53:15"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1787:9:15"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1757:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1767:9:15",
                "type": ""
              }
            ],
            "src": "1717:142:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1912:28:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1922:12:15",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1929:5:15"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1922:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "prepare_store_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1898:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1908:3:15",
                "type": ""
              }
            ],
            "src": "1865:75:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2022:193:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2032:63:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_0",
                        "nodeType": "YulIdentifier",
                        "src": "2087:7:15"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2056:30:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2056:39:15"
                  },
                  "variables": [
                    {
                      "name": "convertedValue_0",
                      "nodeType": "YulTypedName",
                      "src": "2036:16:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2111:4:15"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2151:4:15"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "2145:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2145:11:15"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2158:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "convertedValue_0",
                                "nodeType": "YulIdentifier",
                                "src": "2190:16:15"
                              }
                            ],
                            "functionName": {
                              "name": "prepare_store_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2166:23:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2166:41:15"
                          }
                        ],
                        "functionName": {
                          "name": "update_byte_slice_dynamic32",
                          "nodeType": "YulIdentifier",
                          "src": "2117:27:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2117:91:15"
                      }
                    ],
                    "functionName": {
                      "name": "sstore",
                      "nodeType": "YulIdentifier",
                      "src": "2104:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:105:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2104:105:15"
                }
              ]
            },
            "name": "update_storage_value_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "1999:4:15",
                "type": ""
              },
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2005:6:15",
                "type": ""
              },
              {
                "name": "value_0",
                "nodeType": "YulTypedName",
                "src": "2013:7:15",
                "type": ""
              }
            ],
            "src": "1946:269:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2270:24:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2280:8:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2287:1:15",
                    "type": "",
                    "value": "0"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2280:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "zero_value_for_split_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2266:3:15",
                "type": ""
              }
            ],
            "src": "2221:73:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2353:136:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2363:46:15",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "zero_value_for_split_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2377:30:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:32:15"
                  },
                  "variables": [
                    {
                      "name": "zero_0",
                      "nodeType": "YulTypedName",
                      "src": "2367:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2462:4:15"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2468:6:15"
                      },
                      {
                        "name": "zero_0",
                        "nodeType": "YulIdentifier",
                        "src": "2476:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "update_storage_value_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2418:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:65:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:65:15"
                }
              ]
            },
            "name": "storage_set_to_zero_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "2339:4:15",
                "type": ""
              },
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2345:6:15",
                "type": ""
              }
            ],
            "src": "2300:189:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2545:136:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2612:63:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2656:5:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2663:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "storage_set_to_zero_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "2626:29:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2626:39:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2626:39:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "2565:5:15"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2572:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2562:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:14:15"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2577:26:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2579:22:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2592:5:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2599:1:15",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2588:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2588:13:15"
                        },
                        "variableNames": [
                          {
                            "name": "start",
                            "nodeType": "YulIdentifier",
                            "src": "2579:5:15"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2559:2:15",
                    "statements": []
                  },
                  "src": "2555:120:15"
                }
              ]
            },
            "name": "clear_storage_range_t_bytes1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "2533:5:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2540:3:15",
                "type": ""
              }
            ],
            "src": "2495:186:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2766:464:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2792:431:15",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2806:54:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "2854:5:15"
                            }
                          ],
                          "functionName": {
                            "name": "array_dataslot_t_string_storage",
                            "nodeType": "YulIdentifier",
                            "src": "2822:31:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2822:38:15"
                        },
                        "variables": [
                          {
                            "name": "dataArea",
                            "nodeType": "YulTypedName",
                            "src": "2810:8:15",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2873:63:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "dataArea",
                              "nodeType": "YulIdentifier",
                              "src": "2896:8:15"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "startIndex",
                                  "nodeType": "YulIdentifier",
                                  "src": "2924:10:15"
                                }
                              ],
                              "functionName": {
                                "name": "divide_by_32_ceil",
                                "nodeType": "YulIdentifier",
                                "src": "2906:17:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2906:29:15"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2892:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2892:44:15"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "2877:11:15",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3093:27:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3095:23:15",
                              "value": {
                                "name": "dataArea",
                                "nodeType": "YulIdentifier",
                                "src": "3110:8:15"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3095:11:15"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "3077:10:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3089:2:15",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "3074:2:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3074:18:15"
                        },
                        "nodeType": "YulIf",
                        "src": "3071:49:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "deleteStart",
                              "nodeType": "YulIdentifier",
                              "src": "3162:11:15"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "dataArea",
                                  "nodeType": "YulIdentifier",
                                  "src": "3179:8:15"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "3207:3:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "divide_by_32_ceil",
                                    "nodeType": "YulIdentifier",
                                    "src": "3189:17:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3189:22:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3175:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3175:37:15"
                            }
                          ],
                          "functionName": {
                            "name": "clear_storage_range_t_bytes1",
                            "nodeType": "YulIdentifier",
                            "src": "3133:28:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3133:80:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3133:80:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "2783:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2788:2:15",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2780:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:11:15"
                  },
                  "nodeType": "YulIf",
                  "src": "2777:446:15"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2742:5:15",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "2749:3:15",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "2754:10:15",
                "type": ""
              }
            ],
            "src": "2687:543:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3299:54:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3309:37:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "bits",
                        "nodeType": "YulIdentifier",
                        "src": "3334:4:15"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3340:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3330:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3330:16:15"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "3309:8:15"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_unsigned_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "bits",
                "nodeType": "YulTypedName",
                "src": "3274:4:15",
                "type": ""
              },
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3280:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "3290:8:15",
                "type": ""
              }
            ],
            "src": "3236:117:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3410:118:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3420:68:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3469:1:15",
                                "type": "",
                                "value": "8"
                              },
                              {
                                "name": "bytes",
                                "nodeType": "YulIdentifier",
                                "src": "3472:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "3465:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3465:13:15"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3484:1:15",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3480:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3480:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "shift_right_unsigned_dynamic",
                          "nodeType": "YulIdentifier",
                          "src": "3436:28:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:51:15"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3432:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:56:15"
                  },
                  "variables": [
                    {
                      "name": "mask",
                      "nodeType": "YulTypedName",
                      "src": "3424:4:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3497:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3511:4:15"
                      },
                      {
                        "name": "mask",
                        "nodeType": "YulIdentifier",
                        "src": "3517:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3507:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3507:15:15"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3497:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "mask_bytes_dynamic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3387:4:15",
                "type": ""
              },
              {
                "name": "bytes",
                "nodeType": "YulTypedName",
                "src": "3393:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3403:6:15",
                "type": ""
              }
            ],
            "src": "3359:169:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:214:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3747:37:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3774:4:15"
                      },
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "3780:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "mask_bytes_dynamic",
                      "nodeType": "YulIdentifier",
                      "src": "3755:18:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3755:29:15"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "3747:4:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3793:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3804:4:15"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3814:1:15",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "3817:3:15"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "3810:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3810:11:15"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3801:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:21:15"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "3793:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3595:4:15",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "3601:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "3609:4:15",
                "type": ""
              }
            ],
            "src": "3533:295:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3925:1303:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3936:51:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3983:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3950:32:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:37:15"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "3940:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4072:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4074:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4074:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4074:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4044:6:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4052:18:15",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4041:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4041:30:15"
                  },
                  "nodeType": "YulIf",
                  "src": "4038:56:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4104:52:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot",
                            "nodeType": "YulIdentifier",
                            "src": "4150:4:15"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "4144:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4144:11:15"
                      }
                    ],
                    "functionName": {
                      "name": "extract_byte_array_length",
                      "nodeType": "YulIdentifier",
                      "src": "4118:25:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:38:15"
                  },
                  "variables": [
                    {
                      "name": "oldLen",
                      "nodeType": "YulTypedName",
                      "src": "4108:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "4249:4:15"
                      },
                      {
                        "name": "oldLen",
                        "nodeType": "YulIdentifier",
                        "src": "4255:6:15"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4263:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_t_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "4203:45:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4203:67:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4203:67:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4280:18:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4297:1:15",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "4284:9:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4308:17:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4321:4:15",
                    "type": "",
                    "value": "0x20"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "4308:9:15"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4372:611:15",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4386:37:15",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4405:6:15"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4417:4:15",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4413:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4413:9:15"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4401:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4401:22:15"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "4390:7:15",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4437:51:15",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4483:4:15"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_t_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "4451:31:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4451:37:15"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "4441:6:15",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4501:10:15",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4510:1:15",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "4505:1:15",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4569:163:15",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4594:6:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "4612:3:15"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "4617:9:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4608:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4608:19:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4602:5:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4602:26:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4587:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4587:42:15"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4587:42:15"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4646:24:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4660:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4668:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4656:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4656:14:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4646:6:15"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4687:31:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4704:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4715:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4700:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4700:18:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "4687:9:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4535:1:15"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4538:7:15"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4532:2:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4532:14:15"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "4547:21:15",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4549:17:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4558:1:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4561:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4554:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4554:12:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4549:1:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "4528:3:15",
                              "statements": []
                            },
                            "src": "4524:208:15"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4768:156:15",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4786:43:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "4813:3:15"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4818:9:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4809:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4809:19:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4803:5:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4803:26:15"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "4790:9:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4853:6:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "4880:9:15"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "newLen",
                                                "nodeType": "YulIdentifier",
                                                "src": "4895:6:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4903:4:15",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "4891:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4891:17:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mask_bytes_dynamic",
                                          "nodeType": "YulIdentifier",
                                          "src": "4861:18:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4861:48:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4846:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4846:64:15"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4846:64:15"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:7:15"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4760:6:15"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4748:2:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4748:19:15"
                            },
                            "nodeType": "YulIf",
                            "src": "4745:179:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4944:4:15"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4958:6:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4966:1:15",
                                          "type": "",
                                          "value": "2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "4954:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4954:14:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4970:1:15",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4950:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4950:22:15"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "4937:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4937:36:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4937:36:15"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4365:618:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4370:1:15",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5000:222:15",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5014:14:15",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5027:1:15",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "5018:5:15",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5051:67:15",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5069:35:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5088:3:15"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5093:9:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5084:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5084:19:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5078:5:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5078:26:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5069:5:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "5044:6:15"
                            },
                            "nodeType": "YulIf",
                            "src": "5041:77:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5138:4:15"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5197:5:15"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "5204:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "5144:52:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5144:67:15"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "5131:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5131:81:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5131:81:15"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4992:230:15",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4345:6:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4353:2:15",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4342:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4342:14:15"
                  },
                  "nodeType": "YulSwitch",
                  "src": "4335:887:15"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "3914:4:15",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3920:3:15",
                "type": ""
              }
            ],
            "src": "3833:1395:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5279:81:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5289:65:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5304:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5311:42:15",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5300:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:54:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5289:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5261:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5271:7:15",
                "type": ""
              }
            ],
            "src": "5234:126:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5411:51:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5421:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5450:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5432:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5432:24:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5421:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5393:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5403:7:15",
                "type": ""
              }
            ],
            "src": "5366:96:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5533:53:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5550:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5573:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5555:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5555:24:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5543:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5543:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5543:37:15"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5521:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5528:3:15",
                "type": ""
              }
            ],
            "src": "5468:118:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5690:124:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5700:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5712:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5723:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5708:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5708:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5700:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5780:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5793:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5804:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5789:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5789:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5736:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5736:71:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5662:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5674:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5685:4:15",
                "type": ""
              }
            ],
            "src": "5592:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5860:35:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5870:19:15",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5886:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5880:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5880:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5870:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5853:6:15",
                "type": ""
              }
            ],
            "src": "5820:75:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5990:28:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6007:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6010:1:15",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6000:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6000:12:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6000:12:15"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "5901:117:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6113:28:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6130:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6133:1:15",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6123:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6123:12:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6123:12:15"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "6024:117:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6190:79:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6247:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6256:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6259:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6249:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6249:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6249:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6213:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6238:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "6220:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6220:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6210:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6210:35:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6203:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:43:15"
                  },
                  "nodeType": "YulIf",
                  "src": "6200:63:15"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6183:5:15",
                "type": ""
              }
            ],
            "src": "6147:122:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6338:80:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6348:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6363:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6357:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:13:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6348:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6406:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6379:26:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6379:33:15"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6316:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6324:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6332:5:15",
                "type": ""
              }
            ],
            "src": "6275:143:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6501:274:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6547:83:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6549:77:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6549:79:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6549:79:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6522:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6531:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6518:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6518:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6543:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6514:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6514:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "6511:119:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6640:128:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6655:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6669:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6659:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6684:74:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6730:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6741:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6726:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6726:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6750:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6694:31:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6694:64:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6684:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6471:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6482:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6494:6:15",
                "type": ""
              }
            ],
            "src": "6424:351:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6907:206:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6917:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6929:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6940:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6925:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6917:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6997:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7010:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7021:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7006:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7006:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6953:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6953:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6953:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7078:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7091:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7102:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7087:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7087:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7034:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7034:72:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7034:72:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6871:9:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6883:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6891:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6902:4:15",
                "type": ""
              }
            ],
            "src": "6781:332:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7161:48:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7171:32:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7196:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7189:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7189:13:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7182:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7182:21:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7171:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7143:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7153:7:15",
                "type": ""
              }
            ],
            "src": "7119:90:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7274:50:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7291:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7311:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "7296:14:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7296:21:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7284:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7284:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7284:34:15"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7262:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7269:3:15",
                "type": ""
              }
            ],
            "src": "7215:109:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7450:200:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7460:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7472:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7483:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7468:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7468:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7460:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7540:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7553:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7564:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7549:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7549:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7496:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7496:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7496:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7615:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7628:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7639:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7624:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7624:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7577:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7577:66:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7577:66:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7414:9:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7426:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7434:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7445:4:15",
                "type": ""
              }
            ],
            "src": "7330:320:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7684:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7701:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7704:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7694:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7694:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7694:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7798:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7801:4:15",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7791:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7791:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7791:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7822:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7825:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7815:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7815:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7815:15:15"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7656:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7886:147:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7896:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7919:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7901:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7901:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7896:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7930:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7953:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7935:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7935:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7930:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7964:16:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7975:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7978:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7971:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7971:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7964:3:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8004:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8006:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8006:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8006:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7996:1:15"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "7999:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7993:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7993:10:15"
                  },
                  "nodeType": "YulIf",
                  "src": "7990:36:15"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7873:1:15",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7876:1:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7882:3:15",
                "type": ""
              }
            ],
            "src": "7842:191:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8104:53:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8121:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8144:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8126:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8126:24:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8114:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8114:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8114:37:15"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8092:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8099:3:15",
                "type": ""
              }
            ],
            "src": "8039:118:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8317:288:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8327:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8339:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8350:2:15",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8335:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8335:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8327:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8407:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8420:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8431:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8416:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8416:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8363:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8363:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8363:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8488:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8501:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8512:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8497:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8497:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8444:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8444:72:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8444:72:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8570:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8583:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8594:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8579:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8579:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8526:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8526:72:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8526:72:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8273:9:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8285:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8293:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8301:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8312:4:15",
                "type": ""
              }
            ],
            "src": "8163:442:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8709:124:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8719:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8731:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8742:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8727:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8727:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8719:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8799:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8812:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8823:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8808:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8808:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8755:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8755:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8755:71:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8681:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8693:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8704:4:15",
                "type": ""
              }
            ],
            "src": "8611:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8935:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8952:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8957:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8945:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8945:19:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8945:19:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8973:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8992:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8997:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8988:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8988:14:15"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8973:11:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8907:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8912:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8923:11:15",
                "type": ""
              }
            ],
            "src": "8839:169:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9120:64:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9142:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9150:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9138:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9138:14:15"
                      },
                      {
                        "hexValue": "63616e74206368616e676520636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9154:22:15",
                        "type": "",
                        "value": "cant change contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9131:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9131:46:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9131:46:15"
                }
              ]
            },
            "name": "store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9112:6:15",
                "type": ""
              }
            ],
            "src": "9014:170:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9336:220:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9346:74:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9412:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9417:2:15",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9353:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9353:67:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9346:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9518:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644",
                      "nodeType": "YulIdentifier",
                      "src": "9429:88:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9429:93:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9429:93:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9531:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9542:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9547:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9538:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9538:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9531:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9324:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9332:3:15",
                "type": ""
              }
            ],
            "src": "9190:366:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9733:248:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9743:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9755:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9766:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9751:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9751:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9743:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9790:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9801:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9786:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9786:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9809:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9815:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9805:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9805:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9779:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9779:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9779:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9835:139:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9969:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9843:124:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9843:131:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9835:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9713:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9728:4:15",
                "type": ""
              }
            ],
            "src": "9562:419:15"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644(memPtr) {\n\n        mstore(add(memPtr, 0), \"cant change contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 15,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15634:15",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:15",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:15",
                "type": ""
              }
            ],
            "src": "7:126:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:15",
                "type": ""
              }
            ],
            "src": "139:96:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:15"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:15",
                "type": ""
              }
            ],
            "src": "241:118:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:15",
                "type": ""
              }
            ],
            "src": "365:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "652:40:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "663:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "679:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "673:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "673:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "663:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "635:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "645:6:15",
                "type": ""
              }
            ],
            "src": "593:99:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "794:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "811:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "816:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "804:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "804:19:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "804:19:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "832:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "851:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "856:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "847:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:14:15"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "832:11:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "766:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "771:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "782:11:15",
                "type": ""
              }
            ],
            "src": "698:169:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "935:184:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "945:10:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "954:1:15",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "949:1:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1014:63:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1039:3:15"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1044:1:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1035:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1035:11:15"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1058:3:15"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1063:1:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1054:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1054:11:15"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1048:5:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1048:18:15"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1028:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1028:39:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1028:39:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "975:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "978:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "972:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "972:13:15"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "986:19:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "988:15:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "997:1:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1000:2:15",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "993:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "993:10:15"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "988:1:15"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "968:3:15",
                    "statements": []
                  },
                  "src": "964:113:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1097:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1102:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1093:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:16:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1111:1:15",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1086:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:27:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1086:27:15"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "917:3:15",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "922:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "927:6:15",
                "type": ""
              }
            ],
            "src": "873:246:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:54:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:38:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1201:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1208:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1197:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1197:14:15"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1217:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1213:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1213:7:15"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1193:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:28:15"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1183:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1156:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1166:6:15",
                "type": ""
              }
            ],
            "src": "1125:102:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1325:285:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1335:53:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1382:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1349:32:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1349:39:15"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1339:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1397:78:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1463:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1468:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1404:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:71:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1397:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1523:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1530:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1519:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1519:16:15"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1537:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1542:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "1484:34:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1484:65:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1484:65:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1558:46:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1569:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1596:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1574:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1574:29:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1565:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:39:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1558:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1306:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1313:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1321:3:15",
                "type": ""
              }
            ],
            "src": "1233:377:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:195:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1744:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1767:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1744:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1791:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1802:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1787:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1787:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1810:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1816:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1806:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1806:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1780:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1780:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1780:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1836:86:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1908:6:15"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1917:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1844:63:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1844:78:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1836:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1706:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1718:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1729:4:15",
                "type": ""
              }
            ],
            "src": "1616:313:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1975:35:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1985:19:15",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2001:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1995:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1995:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1985:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1968:6:15",
                "type": ""
              }
            ],
            "src": "1935:75:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2105:28:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2122:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2125:1:15",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2115:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2115:12:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2115:12:15"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2016:117:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2228:28:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2245:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2248:1:15",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2238:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2238:12:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2238:12:15"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2139:117:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:79:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2362:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2371:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2374:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2364:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2364:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2364:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2328:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2353:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2335:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2335:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2325:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2325:35:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2318:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:43:15"
                  },
                  "nodeType": "YulIf",
                  "src": "2315:63:15"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2298:5:15",
                "type": ""
              }
            ],
            "src": "2262:122:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2442:87:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2452:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2474:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2461:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2461:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2452:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2517:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2490:26:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2490:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2490:33:15"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2420:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2428:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2436:5:15",
                "type": ""
              }
            ],
            "src": "2390:139:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2580:32:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2590:16:15",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2601:5:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2590:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2562:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2572:7:15",
                "type": ""
              }
            ],
            "src": "2535:77:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2661:79:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2718:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2727:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2730:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2720:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2720:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2720:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2684:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2709:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2691:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2691:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2681:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2681:35:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2674:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2674:43:15"
                  },
                  "nodeType": "YulIf",
                  "src": "2671:63:15"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2654:5:15",
                "type": ""
              }
            ],
            "src": "2618:122:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2798:87:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2808:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2830:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2817:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2808:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2873:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2846:26:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2846:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2846:33:15"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2776:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2784:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2792:5:15",
                "type": ""
              }
            ],
            "src": "2746:139:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2974:391:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3020:83:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3022:77:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3022:79:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3022:79:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2995:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3004:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2991:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2991:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3016:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2987:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "2984:119:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3113:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3128:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3142:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3132:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3157:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3192:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3203:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3188:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3188:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3212:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3167:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3167:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3157:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3240:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3255:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3259:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3285:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3320:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3331:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3316:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3316:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3340:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3295:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3295:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3285:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2936:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2947:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2959:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2967:6:15",
                "type": ""
              }
            ],
            "src": "2891:474:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3413:48:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3423:32:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3448:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3441:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3441:13:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3434:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:21:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3423:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3395:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3405:7:15",
                "type": ""
              }
            ],
            "src": "3371:90:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3526:50:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3543:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3563:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3548:14:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3548:21:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3536:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3536:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3536:34:15"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3514:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3521:3:15",
                "type": ""
              }
            ],
            "src": "3467:109:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3674:118:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3684:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3696:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3707:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3692:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3692:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3684:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3758:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3771:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3782:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3767:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3767:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3720:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3720:65:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3720:65:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3646:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3658:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3669:4:15",
                "type": ""
              }
            ],
            "src": "3582:210:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3830:28:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3840:12:15",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3847:5:15"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3840:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3816:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3826:3:15",
                "type": ""
              }
            ],
            "src": "3798:60:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3924:82:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3934:66:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3992:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "3974:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3974:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "3965:8:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3965:34:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3947:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3947:53:15"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3934:9:15"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3904:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3914:9:15",
                "type": ""
              }
            ],
            "src": "3864:142:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4072:66:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4082:50:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4126:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4095:30:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4095:37:15"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4082:9:15"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4052:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4062:9:15",
                "type": ""
              }
            ],
            "src": "4012:126:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4231:66:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4241:50:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4285:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4254:30:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4254:37:15"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4241:9:15"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IUniswapV2Router02_$2017_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4211:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4221:9:15",
                "type": ""
              }
            ],
            "src": "4144:153:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4395:93:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4412:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4475:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IUniswapV2Router02_$2017_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4417:57:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4417:64:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4405:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4405:77:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4405:77:15"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IUniswapV2Router02_$2017_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4383:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4390:3:15",
                "type": ""
              }
            ],
            "src": "4303:185:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4619:151:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4629:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4641:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4652:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4637:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4637:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4629:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4736:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4749:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4760:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4745:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4745:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IUniswapV2Router02_$2017_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4665:70:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4665:98:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4665:98:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$2017__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4591:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4603:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4614:4:15",
                "type": ""
              }
            ],
            "src": "4494:276:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4842:263:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4888:83:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4890:77:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4890:79:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4890:79:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4863:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4872:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4859:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4859:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4884:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4855:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4855:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "4852:119:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4981:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4996:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5010:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5000:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5025:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5060:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5071:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5056:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5056:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5080:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5035:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5035:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5025:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4812:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4823:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4835:6:15",
                "type": ""
              }
            ],
            "src": "4776:329:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5176:53:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5193:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5216:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5198:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5198:24:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5186:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5186:37:15"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5164:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5171:3:15",
                "type": ""
              }
            ],
            "src": "5111:118:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5333:124:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5343:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5355:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5366:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5351:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5351:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5343:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5423:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5436:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5447:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5432:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5432:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5379:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5379:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5379:71:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5305:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5317:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5328:4:15",
                "type": ""
              }
            ],
            "src": "5235:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5503:76:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5557:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5566:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5569:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5559:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5559:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5559:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5526:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5548:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5533:14:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5533:21:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5523:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5523:32:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5516:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5516:40:15"
                  },
                  "nodeType": "YulIf",
                  "src": "5513:60:15"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5496:5:15",
                "type": ""
              }
            ],
            "src": "5463:116:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5634:84:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5644:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5666:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5653:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5653:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5644:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5706:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5682:23:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5682:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5682:30:15"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5612:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5620:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5628:5:15",
                "type": ""
              }
            ],
            "src": "5585:133:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5804:388:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5850:83:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5852:77:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5852:79:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5852:79:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5825:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5834:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5821:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5821:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5846:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5817:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5817:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "5814:119:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5943:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5958:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5972:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5962:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5987:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6022:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6033:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6018:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6018:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6042:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5997:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5997:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5987:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6070:115:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6085:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6099:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6089:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6115:60:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6147:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6158:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6143:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6143:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6167:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "6125:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6125:50:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6115:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5766:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5777:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5789:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5797:6:15",
                "type": ""
              }
            ],
            "src": "5724:468:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6298:519:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6344:83:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6346:77:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6346:79:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6346:79:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6319:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6328:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6315:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6315:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6340:2:15",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6311:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6311:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "6308:119:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6437:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6452:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6466:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6456:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6481:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6516:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6527:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6512:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6512:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6536:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6491:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6491:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6481:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6564:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6579:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6593:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6583:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6609:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6644:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6655:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6640:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6640:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6664:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6619:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6619:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6609:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6692:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6707:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6721:2:15",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6711:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6737:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6772:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6783:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6768:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6768:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6792:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6747:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6747:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6737:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6252:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6263:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6275:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6283:6:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6291:6:15",
                "type": ""
              }
            ],
            "src": "6198:619:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6866:43:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6876:27:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6891:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6898:4:15",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6887:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6887:16:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6876:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6848:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6858:7:15",
                "type": ""
              }
            ],
            "src": "6823:86:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6976:51:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6993:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7014:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6998:15:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6998:22:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6986:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6986:35:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6986:35:15"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6964:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6971:3:15",
                "type": ""
              }
            ],
            "src": "6915:112:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7127:120:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7137:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7149:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7160:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7145:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7145:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7137:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7213:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7226:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7237:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7222:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7222:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7173:39:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7173:67:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7173:67:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7099:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7111:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7122:4:15",
                "type": ""
              }
            ],
            "src": "7033:214:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7367:194:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7377:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7389:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7400:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7385:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7385:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7377:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7451:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7464:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7475:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7460:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7460:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7413:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7413:65:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7413:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7526:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7539:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7550:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7535:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7535:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7488:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7488:66:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7488:66:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7331:9:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7343:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7351:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7362:4:15",
                "type": ""
              }
            ],
            "src": "7253:308:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7650:391:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7696:83:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7698:77:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7698:79:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7698:79:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7671:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7680:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7667:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7667:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7692:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7663:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7663:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "7660:119:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7789:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7804:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7818:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7808:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7833:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7868:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7879:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7864:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7864:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7888:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7843:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7843:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7833:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7916:118:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7931:16:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7945:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7935:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7961:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7996:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8007:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7992:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7992:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8016:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7971:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7971:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7961:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7612:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7623:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7635:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7643:6:15",
                "type": ""
              }
            ],
            "src": "7567:474:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8075:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8092:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8095:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8085:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8085:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8189:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8192:4:15",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8182:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8182:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8182:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8213:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8216:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8206:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8206:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8206:15:15"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "8047:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8284:269:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8294:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8308:4:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8314:1:15",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8304:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8304:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8294:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8325:38:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8355:4:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8361:1:15",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8351:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8351:12:15"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "8329:18:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8402:51:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8416:27:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "8430:6:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8438:4:15",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "8426:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8426:17:15"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8416:6:15"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8382:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8375:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8375:26:15"
                  },
                  "nodeType": "YulIf",
                  "src": "8372:81:15"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8505:42:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "8519:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8519:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8519:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8469:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8492:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8500:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8489:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8489:14:15"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8466:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8466:38:15"
                  },
                  "nodeType": "YulIf",
                  "src": "8463:84:15"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8268:4:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8277:6:15",
                "type": ""
              }
            ],
            "src": "8233:320:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8665:65:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8687:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8695:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8683:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8683:14:15"
                      },
                      {
                        "hexValue": "43616e2774206368616e676520636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8699:23:15",
                        "type": "",
                        "value": "Can't change contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8676:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8676:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8676:47:15"
                }
              ]
            },
            "name": "store_literal_in_memory_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8657:6:15",
                "type": ""
              }
            ],
            "src": "8559:171:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8882:220:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8892:74:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8958:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8963:2:15",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8899:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8899:67:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8892:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9064:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59",
                      "nodeType": "YulIdentifier",
                      "src": "8975:88:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8975:93:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8975:93:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9077:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9088:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9093:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9084:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9084:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9077:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8870:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8878:3:15",
                "type": ""
              }
            ],
            "src": "8736:366:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9279:248:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9289:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9301:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9312:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9297:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9297:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9289:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9336:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9347:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9332:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9332:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9355:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9361:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9351:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9351:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9325:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9325:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9325:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9381:139:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9515:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9389:124:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9389:131:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9381:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9259:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9274:4:15",
                "type": ""
              }
            ],
            "src": "9108:419:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9653:200:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9663:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9675:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9686:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9671:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9671:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9663:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9743:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9756:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9767:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9752:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9752:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9699:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9699:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9699:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9818:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9831:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9842:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9827:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9827:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9780:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9780:66:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9780:66:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9617:9:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9629:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9637:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9648:4:15",
                "type": ""
              }
            ],
            "src": "9533:320:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9965:64:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9987:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9995:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9983:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9983:14:15"
                      },
                      {
                        "hexValue": "63616e74206368616e676520636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9999:22:15",
                        "type": "",
                        "value": "cant change contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9976:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9976:46:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9976:46:15"
                }
              ]
            },
            "name": "store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9957:6:15",
                "type": ""
              }
            ],
            "src": "9859:170:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10181:220:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10191:74:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10257:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10262:2:15",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10198:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10198:67:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10191:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10363:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644",
                      "nodeType": "YulIdentifier",
                      "src": "10274:88:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10274:93:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10274:93:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10376:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10387:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10392:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10383:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10383:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10376:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10169:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10177:3:15",
                "type": ""
              }
            ],
            "src": "10035:366:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10578:248:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10588:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10600:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10611:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10596:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10596:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10588:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10635:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10646:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10631:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10631:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10654:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10660:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10650:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10650:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10624:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10624:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10624:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10680:139:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10814:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10688:124:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10688:131:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10680:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10558:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10573:4:15",
                "type": ""
              }
            ],
            "src": "10407:419:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10938:64:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10960:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10968:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10956:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10956:14:15"
                      },
                      {
                        "hexValue": "54726164696e6720616c7265616479206f70656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10972:22:15",
                        "type": "",
                        "value": "Trading already open"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10949:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10949:46:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10949:46:15"
                }
              ]
            },
            "name": "store_literal_in_memory_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10930:6:15",
                "type": ""
              }
            ],
            "src": "10832:170:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11154:220:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11164:74:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11230:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11235:2:15",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11171:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11171:67:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11164:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11336:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c",
                      "nodeType": "YulIdentifier",
                      "src": "11247:88:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11247:93:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11247:93:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11349:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11360:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11365:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11356:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11356:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11349:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11142:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11150:3:15",
                "type": ""
              }
            ],
            "src": "11008:366:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11551:248:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11561:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11573:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11584:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11569:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11569:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11561:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11608:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11619:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11604:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11604:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11627:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11633:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11623:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11623:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11597:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11597:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11597:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11653:139:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11787:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11661:124:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11661:131:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11653:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11531:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11546:4:15",
                "type": ""
              }
            ],
            "src": "11380:419:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11959:288:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11969:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11981:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11992:2:15",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11977:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11977:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11969:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12049:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12062:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12073:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12058:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12058:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12005:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12005:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12005:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12130:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12143:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12154:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12139:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12139:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12086:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12086:72:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12086:72:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12212:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12225:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12236:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12221:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12221:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12168:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12168:72:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12168:72:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11915:9:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11927:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11935:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11943:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11954:4:15",
                "type": ""
              }
            ],
            "src": "11805:442:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12359:119:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12381:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12389:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12377:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12377:14:15"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12393:34:15",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12370:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12370:58:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12370:58:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12449:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12457:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12445:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12445:15:15"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12462:8:15",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12438:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12438:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12438:33:15"
                }
              ]
            },
            "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12351:6:15",
                "type": ""
              }
            ],
            "src": "12253:225:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12630:220:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12640:74:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12706:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12711:2:15",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12647:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12647:67:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12640:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12812:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                      "nodeType": "YulIdentifier",
                      "src": "12723:88:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12723:93:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12723:93:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12825:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12836:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12841:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12832:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12832:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12825:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12618:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12626:3:15",
                "type": ""
              }
            ],
            "src": "12484:366:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13027:248:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13037:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13049:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13060:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13045:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13045:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13037:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13084:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13095:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13080:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13080:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13103:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13109:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13099:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13099:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13073:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13073:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13073:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13129:139:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13263:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13137:124:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13137:131:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13129:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13007:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13022:4:15",
                "type": ""
              }
            ],
            "src": "12856:419:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13387:71:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13409:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13417:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13405:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13405:14:15"
                      },
                      {
                        "hexValue": "546f6b656e3a2054726164696e67206e6f74206f70656e20796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13421:29:15",
                        "type": "",
                        "value": "Token: Trading not open yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13398:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13398:53:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13398:53:15"
                }
              ]
            },
            "name": "store_literal_in_memory_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13379:6:15",
                "type": ""
              }
            ],
            "src": "13281:177:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13610:220:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13620:74:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13686:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13691:2:15",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13627:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13627:67:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13620:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13792:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367",
                      "nodeType": "YulIdentifier",
                      "src": "13703:88:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13703:93:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13703:93:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13805:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13816:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13821:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13812:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13812:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13805:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13598:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13606:3:15",
                "type": ""
              }
            ],
            "src": "13464:366:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14007:248:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14017:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14029:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14040:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14025:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14025:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14017:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14064:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14075:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14060:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14060:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14083:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14089:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14079:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14079:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14053:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14053:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14053:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14109:139:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14243:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14117:124:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14117:131:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14109:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13987:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14002:4:15",
                "type": ""
              }
            ],
            "src": "13836:419:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14289:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14306:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14309:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14299:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14299:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14299:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14403:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14406:4:15",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14396:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14396:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14396:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14427:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14430:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14420:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14420:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14420:15:15"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14261:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14495:362:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14505:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14528:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14510:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14510:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14505:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14539:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14562:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14544:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14544:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14539:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14573:28:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14596:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14599:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14592:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14592:9:15"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "14577:11:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14610:41:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "14639:11:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14621:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14621:30:15"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14610:7:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14828:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14830:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14830:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14830:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14761:1:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14754:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14754:9:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "14784:1:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "14791:7:15"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14800:1:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "14787:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14787:15:15"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "14781:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14781:22:15"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "14734:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14734:83:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14714:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14714:113:15"
                  },
                  "nodeType": "YulIf",
                  "src": "14711:139:15"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14478:1:15",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14481:1:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14487:7:15",
                "type": ""
              }
            ],
            "src": "14447:410:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14891:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14908:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14911:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14901:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14901:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14901:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15005:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15008:4:15",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14998:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14998:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14998:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15029:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15032:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15022:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15022:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15022:15:15"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "14863:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15091:143:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15101:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15124:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15106:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15106:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15101:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15135:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15158:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15140:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15140:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15135:1:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15182:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "15184:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15184:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15184:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15179:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15172:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15172:9:15"
                  },
                  "nodeType": "YulIf",
                  "src": "15169:35:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15214:14:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15223:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15226:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "15219:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15219:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "15214:1:15"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15080:1:15",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15083:1:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "15089:1:15",
                "type": ""
              }
            ],
            "src": "15049:185:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15285:149:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15295:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15318:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15300:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15300:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15295:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15329:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15352:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15334:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15334:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15329:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15363:17:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15375:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15378:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15371:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15371:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "15363:4:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15405:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15407:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15407:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15407:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "15396:4:15"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15402:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15393:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15393:11:15"
                  },
                  "nodeType": "YulIf",
                  "src": "15390:37:15"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15271:1:15",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15274:1:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "15280:4:15",
                "type": ""
              }
            ],
            "src": "15240:194:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15484:147:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15494:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15517:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15499:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15499:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15494:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15528:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15551:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15533:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15533:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15528:1:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15562:16:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15573:1:15"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15576:1:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15569:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15569:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15562:3:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15602:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15604:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15604:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15604:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15594:1:15"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "15597:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15591:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15591:10:15"
                  },
                  "nodeType": "YulIf",
                  "src": "15588:36:15"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15471:1:15",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15474:1:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15480:3:15",
                "type": ""
              }
            ],
            "src": "15440:191:15"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$2017_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$2017_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$2017_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$2017__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$2017_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't change contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644(memPtr) {\n\n        mstore(add(memPtr, 0), \"cant change contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trading already open\")\n\n    }\n\n    function abi_encode_t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token: Trading not open yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
      "id": 15,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "465:7407:14:-:0;;;1006:2;983:25;;;;;;;;;;;;;;;;;;;;1107:4;1078:33;;;;;;;;;;;;;;;;;;;;1386:5;1358:33;;;;;;;;;;;;;;;;;;;;1423:5;1400:28;;;;;;;;;;;;;;;;;;;;2567:1454;;;;;;;;;;2611:10;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2634:65:14::2;2656:1;2660:10;2673:24;2634:13;;;:65;;:::i;:::-;2712:32;2747:42;2712:77;;2800:35;2871:24;2800:106;;2993:21;3035:16;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3017:70;;;3096:4;3103:16;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3017:110;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2993:134;;3156:16;3138:15;;:34;;;;;;;;;;;;;;;;;;3183:68;3200:4;3207:24;3233:17;3183:8;;;:68;;:::i;:::-;3262:34;3276:13;3291:4;3262:13;;;:34;;:::i;:::-;3327:10;3309:15;;:28;;;;;;;;;;;;;;;;;;3448:94;;;;;;;;3489:5;3448:94;;;;;;3526:4;3448:94;;;;::::0;3421:12:::2;:24;3434:10;3421:24;;;;;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:41;3582:10;3594:4;3558:41;;;;;;;:::i;:::-;;;;;;;;3640:94;;;;;;;;3681:5;3640:94;;;;;;3718:4;3640:94;;;;::::0;3610:12:::2;:27;3631:4;3610:27;;;;;;;;;;;;;;;:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3752:44;3784:4;3791;3752:44;;;;;;;:::i;:::-;;;;;;;;3848:94;;;;;;;;3889:5;3848:94;;;;;;3926:4;3848:94;;;;::::0;3807:12:::2;:38;3820:24;3807:38;;;;;;;;;;;;;;;:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3958:55;3982:24;4008:4;3958:55;;;;;;;:::i;:::-;;;;;;;;2623:1398;;;465:7407:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;;;:37;;:::i;:::-;8989:128;;;:::o;7539:330:14:-;1531:13:0;:11;;;:13;;:::i;:::-;7646:4:14::1;7627:24;;:7;:24;;::::0;7619:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7687:24;7714:12;:21;7727:7;7714:21;;;;;;;;;;;;;;;7687:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7767:5;7746;:18;;:26;;;;;;;;;::::0;::::1;7807:5;7783:12;:21;7796:7;7783:21;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7828:33;7846:7;7855:5;7828:33;;;;;;;:::i;:::-;;;;;;;;7608:261;7539:330:::0;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;1796:162:0:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5901:117::-;6010:1;6007;6000:12;6147:122;6220:24;6238:5;6220:24;:::i;:::-;6213:5;6210:35;6200:63;;6259:1;6256;6249:12;6200:63;6147:122;:::o;6275:143::-;6332:5;6363:6;6357:13;6348:22;;6379:33;6406:5;6379:33;:::i;:::-;6275:143;;;;:::o;6424:351::-;6494:6;6543:2;6531:9;6522:7;6518:23;6514:32;6511:119;;;6549:79;;:::i;:::-;6511:119;6669:1;6694:64;6750:7;6741:6;6730:9;6726:22;6694:64;:::i;:::-;6684:74;;6640:128;6424:351;;;;:::o;6781:332::-;6902:4;6940:2;6929:9;6925:18;6917:26;;6953:71;7021:1;7010:9;7006:17;6997:6;6953:71;:::i;:::-;7034:72;7102:2;7091:9;7087:18;7078:6;7034:72;:::i;:::-;6781:332;;;;;:::o;7119:90::-;7153:7;7196:5;7189:13;7182:21;7171:32;;7119:90;;;:::o;7215:109::-;7296:21;7311:5;7296:21;:::i;:::-;7291:3;7284:34;7215:109;;:::o;7330:320::-;7445:4;7483:2;7472:9;7468:18;7460:26;;7496:71;7564:1;7553:9;7549:17;7540:6;7496:71;:::i;:::-;7577:66;7639:2;7628:9;7624:18;7615:6;7577:66;:::i;:::-;7330:320;;;;;:::o;7656:180::-;7704:77;7701:1;7694:88;7801:4;7798:1;7791:15;7825:4;7822:1;7815:15;7842:191;7882:3;7901:20;7919:1;7901:20;:::i;:::-;7896:25;;7935:20;7953:1;7935:20;:::i;:::-;7930:25;;7978:1;7975;7971:9;7964:16;;7999:3;7996:1;7993:10;7990:36;;;8006:18;;:::i;:::-;7990:36;7842:191;;;;:::o;8039:118::-;8126:24;8144:5;8126:24;:::i;:::-;8121:3;8114:37;8039:118;;:::o;8163:442::-;8312:4;8350:2;8339:9;8335:18;8327:26;;8363:71;8431:1;8420:9;8416:17;8407:6;8363:71;:::i;:::-;8444:72;8512:2;8501:9;8497:18;8488:6;8444:72;:::i;:::-;8526;8594:2;8583:9;8579:18;8570:6;8526:72;:::i;:::-;8163:442;;;;;;:::o;8611:222::-;8704:4;8742:2;8731:9;8727:18;8719:26;;8755:71;8823:1;8812:9;8808:17;8799:6;8755:71;:::i;:::-;8611:222;;;;:::o;8839:169::-;8923:11;8957:6;8952:3;8945:19;8997:4;8992:3;8988:14;8973:29;;8839:169;;;;:::o;9014:170::-;9154:22;9150:1;9142:6;9138:14;9131:46;9014:170;:::o;9190:366::-;9332:3;9353:67;9417:2;9412:3;9353:67;:::i;:::-;9346:74;;9429:93;9518:3;9429:93;:::i;:::-;9547:2;9542:3;9538:12;9531:19;;9190:366;;;:::o;9562:419::-;9728:4;9766:2;9755:9;9751:18;9743:26;;9815:9;9809:4;9805:20;9801:1;9790:9;9786:17;9779:47;9843:131;9969:4;9843:131;:::i;:::-;9835:139;;9562:419;;;:::o;465:7407:14:-;;;;;;;",
  "deployedSourceMap": "465:7407:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1616:41:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4127:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6934:350:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5039:244:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1358:33:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;832:51:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;7345:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7539:330:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6669:203;;;;;;;;;;;;;:::i;:::-;;983:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4355:92:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1941:30:14;;;;;;;;;;;;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1616:41:14:-;;;;;;;;;;;;;:::o;4127:132::-;4189:4;4213:12;:22;4226:8;4213:22;;;;;;;;;;;;;;;:38;;;;;;;;;;;;4206:45;;4127:132;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;6934:350:14:-;1531:13:0;:11;:13::i;:::-;7045:4:14::1;7026:24;;:7;:24;;::::0;7018:58:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7087:24;7114:12;:21;7127:7;7114:21;;;;;;;;;;;;;;;7087:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7170:8;7146:5;:21;;:32;;;;;;;;;::::0;::::1;7213:5;7189:12;:21;7202:7;7189:21;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:42;7258:7;7267:8;7234:42;;;;;;;:::i;:::-;;;;;;;;7007:277;6934:350:::0;;:::o;5039:244:2:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;1358:33:14:-;;;;;;;;;;;;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;832:51:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7345:186::-;1531:13:0;:11;:13::i;:::-;7445:19:14::1;7427:15;;:37;;;;;;;;;;;;;;;;;;7480:43;7503:19;7480:43;;;;;;:::i;:::-;;;;;;;;7345:186:::0;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;7539:330:14:-;1531:13:0;:11;:13::i;:::-;7646:4:14::1;7627:24;;:7;:24;;::::0;7619:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7687:24;7714:12;:21;7727:7;7714:21;;;;;;;;;;;;;;;7687:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7767:5;7746;:18;;:26;;;;;;;;;::::0;::::1;7807:5;7783:12;:21;7796:7;7783:21;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7828:33;7846:7;7855:5;7828:33;;;;;;;:::i;:::-;;;;;;;;7608:261;7539:330:::0;;:::o;6669:203::-;1531:13:0;:11;:13::i;:::-;6747:5:14::1;6730:22;;:13;;;;;;;;;;;:22;;;6722:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;6806:4;6790:13;;:20;;;;;;;;;;;;;;;;;;6831:2;6821:7;;:12;;;;;;;;;;;;;;;;;;6851:13;;;;;;;;;;6669:203::o:0;983:25::-;;;;;;;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;4355:92:14:-;4402:4;4426:13;;;;;;;;;;;4419:20;;4355:92;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10663:477:2:-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;5006:1289:14:-;5205:19;5227:15;5237:4;5227:9;:15::i;:::-;5205:37;;5290:6;5275:11;:21;;5253:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;5375:28;5406:12;:18;5419:4;5406:18;;;;;;;;;;;;;;;5375:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:26;5464:12;:16;5477:2;5464:16;;;;;;;;;;;;;;;5435:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5493:17;5514:9;:25;;;:65;;;;5556:7;:23;;;5514:65;5493:87;;5593:17;5627:9;:22;;;:46;;;;5653:7;:20;;;5627:46;5623:230;;;5716:13;;;;;;;;;;;:38;;;;5747:7;:5;:7::i;:::-;5733:21;;:10;:21;;;5716:38;:62;;;;5771:7;:5;:7::i;:::-;5758:20;;:9;:20;;;5716:62;5690:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;5623:230;5869:7;:20;;;:45;;;;;5909:5;5893:21;;:12;:21;;;5869:45;:62;;;;;5918:13;;;;;;;;;;;5869:62;5865:177;;;5981:3;5970:7;;;;;;;;;;;5961:16;;:6;:16;;;;:::i;:::-;5960:24;;;;:::i;:::-;5948:36;;5865:177;;;6029:1;6017:13;;5865:177;6071:1;6058:9;:14;;:34;;;;;6087:5;6076:16;;:7;;;;;;;;;;;:16;;;6058:34;6054:234;;;6109:43;6123:4;6129:2;6142:9;6133:6;:18;;;;:::i;:::-;6109:13;:43::i;:::-;6167:45;6181:4;6195;6202:9;6167:13;:45::i;:::-;6054:234;;;6245:31;6259:4;6265:2;6269:6;6245:13;:31::i;:::-;6054:234;5117:1178;;;;;5006:1289;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:126:15:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:169::-;782:11;816:6;811:3;804:19;856:4;851:3;847:14;832:29;;698:169;;;;:::o;873:246::-;954:1;964:113;978:6;975:1;972:13;964:113;;;1063:1;1058:3;1054:11;1048:18;1044:1;1039:3;1035:11;1028:39;1000:2;997:1;993:10;988:15;;964:113;;;1111:1;1102:6;1097:3;1093:16;1086:27;935:184;873:246;;;:::o;1125:102::-;1166:6;1217:2;1213:7;1208:2;1201:5;1197:14;1193:28;1183:38;;1125:102;;;:::o;1233:377::-;1321:3;1349:39;1382:5;1349:39;:::i;:::-;1404:71;1468:6;1463:3;1404:71;:::i;:::-;1397:78;;1484:65;1542:6;1537:3;1530:4;1523:5;1519:16;1484:65;:::i;:::-;1574:29;1596:6;1574:29;:::i;:::-;1569:3;1565:39;1558:46;;1325:285;1233:377;;;;:::o;1616:313::-;1729:4;1767:2;1756:9;1752:18;1744:26;;1816:9;1810:4;1806:20;1802:1;1791:9;1787:17;1780:47;1844:78;1917:4;1908:6;1844:78;:::i;:::-;1836:86;;1616:313;;;;:::o;2016:117::-;2125:1;2122;2115:12;2262:122;2335:24;2353:5;2335:24;:::i;:::-;2328:5;2325:35;2315:63;;2374:1;2371;2364:12;2315:63;2262:122;:::o;2390:139::-;2436:5;2474:6;2461:20;2452:29;;2490:33;2517:5;2490:33;:::i;:::-;2390:139;;;;:::o;2535:77::-;2572:7;2601:5;2590:16;;2535:77;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:60::-;3826:3;3847:5;3840:12;;3798:60;;;:::o;3864:142::-;3914:9;3947:53;3965:34;3974:24;3992:5;3974:24;:::i;:::-;3965:34;:::i;:::-;3947:53;:::i;:::-;3934:66;;3864:142;;;:::o;4012:126::-;4062:9;4095:37;4126:5;4095:37;:::i;:::-;4082:50;;4012:126;;;:::o;4144:153::-;4221:9;4254:37;4285:5;4254:37;:::i;:::-;4241:50;;4144:153;;;:::o;4303:185::-;4417:64;4475:5;4417:64;:::i;:::-;4412:3;4405:77;4303:185;;:::o;4494:276::-;4614:4;4652:2;4641:9;4637:18;4629:26;;4665:98;4760:1;4749:9;4745:17;4736:6;4665:98;:::i;:::-;4494:276;;;;:::o;4776:329::-;4835:6;4884:2;4872:9;4863:7;4859:23;4855:32;4852:119;;;4890:79;;:::i;:::-;4852:119;5010:1;5035:53;5080:7;5071:6;5060:9;5056:22;5035:53;:::i;:::-;5025:63;;4981:117;4776:329;;;;:::o;5111:118::-;5198:24;5216:5;5198:24;:::i;:::-;5193:3;5186:37;5111:118;;:::o;5235:222::-;5328:4;5366:2;5355:9;5351:18;5343:26;;5379:71;5447:1;5436:9;5432:17;5423:6;5379:71;:::i;:::-;5235:222;;;;:::o;5463:116::-;5533:21;5548:5;5533:21;:::i;:::-;5526:5;5523:32;5513:60;;5569:1;5566;5559:12;5513:60;5463:116;:::o;5585:133::-;5628:5;5666:6;5653:20;5644:29;;5682:30;5706:5;5682:30;:::i;:::-;5585:133;;;;:::o;5724:468::-;5789:6;5797;5846:2;5834:9;5825:7;5821:23;5817:32;5814:119;;;5852:79;;:::i;:::-;5814:119;5972:1;5997:53;6042:7;6033:6;6022:9;6018:22;5997:53;:::i;:::-;5987:63;;5943:117;6099:2;6125:50;6167:7;6158:6;6147:9;6143:22;6125:50;:::i;:::-;6115:60;;6070:115;5724:468;;;;;:::o;6198:619::-;6275:6;6283;6291;6340:2;6328:9;6319:7;6315:23;6311:32;6308:119;;;6346:79;;:::i;:::-;6308:119;6466:1;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6437:117;6593:2;6619:53;6664:7;6655:6;6644:9;6640:22;6619:53;:::i;:::-;6609:63;;6564:118;6721:2;6747:53;6792:7;6783:6;6772:9;6768:22;6747:53;:::i;:::-;6737:63;;6692:118;6198:619;;;;;:::o;6823:86::-;6858:7;6898:4;6891:5;6887:16;6876:27;;6823:86;;;:::o;6915:112::-;6998:22;7014:5;6998:22;:::i;:::-;6993:3;6986:35;6915:112;;:::o;7033:214::-;7122:4;7160:2;7149:9;7145:18;7137:26;;7173:67;7237:1;7226:9;7222:17;7213:6;7173:67;:::i;:::-;7033:214;;;;:::o;7253:308::-;7362:4;7400:2;7389:9;7385:18;7377:26;;7413:65;7475:1;7464:9;7460:17;7451:6;7413:65;:::i;:::-;7488:66;7550:2;7539:9;7535:18;7526:6;7488:66;:::i;:::-;7253:308;;;;;:::o;7567:474::-;7635:6;7643;7692:2;7680:9;7671:7;7667:23;7663:32;7660:119;;;7698:79;;:::i;:::-;7660:119;7818:1;7843:53;7888:7;7879:6;7868:9;7864:22;7843:53;:::i;:::-;7833:63;;7789:117;7945:2;7971:53;8016:7;8007:6;7996:9;7992:22;7971:53;:::i;:::-;7961:63;;7916:118;7567:474;;;;;:::o;8047:180::-;8095:77;8092:1;8085:88;8192:4;8189:1;8182:15;8216:4;8213:1;8206:15;8233:320;8277:6;8314:1;8308:4;8304:12;8294:22;;8361:1;8355:4;8351:12;8382:18;8372:81;;8438:4;8430:6;8426:17;8416:27;;8372:81;8500:2;8492:6;8489:14;8469:18;8466:38;8463:84;;8519:18;;:::i;:::-;8463:84;8284:269;8233:320;;;:::o;8559:171::-;8699:23;8695:1;8687:6;8683:14;8676:47;8559:171;:::o;8736:366::-;8878:3;8899:67;8963:2;8958:3;8899:67;:::i;:::-;8892:74;;8975:93;9064:3;8975:93;:::i;:::-;9093:2;9088:3;9084:12;9077:19;;8736:366;;;:::o;9108:419::-;9274:4;9312:2;9301:9;9297:18;9289:26;;9361:9;9355:4;9351:20;9347:1;9336:9;9332:17;9325:47;9389:131;9515:4;9389:131;:::i;:::-;9381:139;;9108:419;;;:::o;9533:320::-;9648:4;9686:2;9675:9;9671:18;9663:26;;9699:71;9767:1;9756:9;9752:17;9743:6;9699:71;:::i;:::-;9780:66;9842:2;9831:9;9827:18;9818:6;9780:66;:::i;:::-;9533:320;;;;;:::o;9859:170::-;9999:22;9995:1;9987:6;9983:14;9976:46;9859:170;:::o;10035:366::-;10177:3;10198:67;10262:2;10257:3;10198:67;:::i;:::-;10191:74;;10274:93;10363:3;10274:93;:::i;:::-;10392:2;10387:3;10383:12;10376:19;;10035:366;;;:::o;10407:419::-;10573:4;10611:2;10600:9;10596:18;10588:26;;10660:9;10654:4;10650:20;10646:1;10635:9;10631:17;10624:47;10688:131;10814:4;10688:131;:::i;:::-;10680:139;;10407:419;;;:::o;10832:170::-;10972:22;10968:1;10960:6;10956:14;10949:46;10832:170;:::o;11008:366::-;11150:3;11171:67;11235:2;11230:3;11171:67;:::i;:::-;11164:74;;11247:93;11336:3;11247:93;:::i;:::-;11365:2;11360:3;11356:12;11349:19;;11008:366;;;:::o;11380:419::-;11546:4;11584:2;11573:9;11569:18;11561:26;;11633:9;11627:4;11623:20;11619:1;11608:9;11604:17;11597:47;11661:131;11787:4;11661:131;:::i;:::-;11653:139;;11380:419;;;:::o;11805:442::-;11954:4;11992:2;11981:9;11977:18;11969:26;;12005:71;12073:1;12062:9;12058:17;12049:6;12005:71;:::i;:::-;12086:72;12154:2;12143:9;12139:18;12130:6;12086:72;:::i;:::-;12168;12236:2;12225:9;12221:18;12212:6;12168:72;:::i;:::-;11805:442;;;;;;:::o;12253:225::-;12393:34;12389:1;12381:6;12377:14;12370:58;12462:8;12457:2;12449:6;12445:15;12438:33;12253:225;:::o;12484:366::-;12626:3;12647:67;12711:2;12706:3;12647:67;:::i;:::-;12640:74;;12723:93;12812:3;12723:93;:::i;:::-;12841:2;12836:3;12832:12;12825:19;;12484:366;;;:::o;12856:419::-;13022:4;13060:2;13049:9;13045:18;13037:26;;13109:9;13103:4;13099:20;13095:1;13084:9;13080:17;13073:47;13137:131;13263:4;13137:131;:::i;:::-;13129:139;;12856:419;;;:::o;13281:177::-;13421:29;13417:1;13409:6;13405:14;13398:53;13281:177;:::o;13464:366::-;13606:3;13627:67;13691:2;13686:3;13627:67;:::i;:::-;13620:74;;13703:93;13792:3;13703:93;:::i;:::-;13821:2;13816:3;13812:12;13805:19;;13464:366;;;:::o;13836:419::-;14002:4;14040:2;14029:9;14025:18;14017:26;;14089:9;14083:4;14079:20;14075:1;14064:9;14060:17;14053:47;14117:131;14243:4;14117:131;:::i;:::-;14109:139;;13836:419;;;:::o;14261:180::-;14309:77;14306:1;14299:88;14406:4;14403:1;14396:15;14430:4;14427:1;14420:15;14447:410;14487:7;14510:20;14528:1;14510:20;:::i;:::-;14505:25;;14544:20;14562:1;14544:20;:::i;:::-;14539:25;;14599:1;14596;14592:9;14621:30;14639:11;14621:30;:::i;:::-;14610:41;;14800:1;14791:7;14787:15;14784:1;14781:22;14761:1;14754:9;14734:83;14711:139;;14830:18;;:::i;:::-;14711:139;14495:362;14447:410;;;;:::o;14863:180::-;14911:77;14908:1;14901:88;15008:4;15005:1;14998:15;15032:4;15029:1;15022:15;15049:185;15089:1;15106:20;15124:1;15106:20;:::i;:::-;15101:25;;15140:20;15158:1;15140:20;:::i;:::-;15135:25;;15179:1;15169:35;;15184:18;;:::i;:::-;15169:35;15226:1;15223;15219:9;15214:14;;15049:185;;;;:::o;15240:194::-;15280:4;15300:20;15318:1;15300:20;:::i;:::-;15295:25;;15334:20;15352:1;15334:20;:::i;:::-;15329:25;;15378:1;15375;15371:9;15363:17;;15402:1;15396:4;15393:11;15390:37;;;15407:18;;:::i;:::-;15390:37;15240:194;;;;:::o;15440:191::-;15480:3;15499:20;15517:1;15499:20;:::i;:::-;15494:25;;15533:20;15551:1;15533:20;:::i;:::-;15528:25;;15576:1;15573;15569:9;15562:16;;15597:3;15594:1;15591:10;15588:36;;;15604:18;;:::i;:::-;15588:36;15440:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\r\n\r\ncontract Token is ERC20, Ownable {\r\n    using SafeERC20 for IERC20;\r\n    /*//////////////////////////////////////////////////////////////\r\n                            TAX VARIABLES\r\n    //////////////////////////////////////////////////////////////*/\r\n    struct WalletState {\r\n        bool isMarketPair;\r\n        bool isExemptFromTax;\r\n    }\r\n    // Saves gas!\r\n    mapping(address => WalletState) public walletStates;\r\n\r\n    // Set to 10/10 when trading is open. SetTaxes can only set it\r\n    // up to 10/10.\r\n\r\n    uint8 public sellTax = 10;\r\n\r\n    // When set is true, tax will no longer be change-able.\r\n    bool private _isTaxEnabled = true;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            CONTRACT SWAP\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    // Once switched on, can never be switched off.\r\n    bool public isTradingOpen = false;\r\n\r\n    bool private _inSwap = false;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            UNISWAP\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    IUniswapV2Router02 public uniswapV2Router;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            TAX RECIPIENTS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    // Platform cut will be sent to this address.\r\n    // Defaults to contract creator.\r\n    address public protocolAddress;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            EVENTS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    event ExcludedFromFeesUpdated(address wallet, bool isExcluded);\r\n    event MarketPairUpdated(address pair, bool isMarketPair);\r\n\r\n    event ProtocolAddressUpdated(address newProtocolAddress);\r\n\r\n    event TradingOpen();\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            MAIN LOGIC\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    constructor() ERC20(\"Token\", \"TKN\") Ownable(msg.sender) {\r\n        super._update(address(0), msg.sender, (1_000_000_000 * 10 ** 18));\r\n\r\n        address uniswapV2Router02Address = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\r\n            uniswapV2Router02Address\r\n        );\r\n\r\n        // Create the pair and mark it as a market pair to enable taxes.\r\n        address uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), _uniswapV2Router.WETH());\r\n        uniswapV2Router = _uniswapV2Router;\r\n        _approve(address(this), uniswapV2Router02Address, type(uint256).max);\r\n        setMarketPair(uniswapV2Pair, true);\r\n\r\n        protocolAddress = msg.sender;\r\n\r\n        // Exclude owner, this contract and Uniswap router from fees.\r\n        walletStates[msg.sender] = WalletState({\r\n            isMarketPair: false,\r\n            isExemptFromTax: true\r\n        });\r\n        emit ExcludedFromFeesUpdated(msg.sender, true);\r\n        walletStates[address(this)] = WalletState({\r\n            isMarketPair: false,\r\n            isExemptFromTax: true\r\n        });\r\n\r\n        emit ExcludedFromFeesUpdated(address(this), true);\r\n        walletStates[uniswapV2Router02Address] = WalletState({\r\n            isMarketPair: false,\r\n            isExemptFromTax: true\r\n        });\r\n        emit ExcludedFromFeesUpdated(uniswapV2Router02Address, true);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    /// @notice Returns if an address is excluded from tax.\r\n    function isTaxExempt(address account_) external view returns (bool) {\r\n        return walletStates[account_].isExemptFromTax;\r\n    }\r\n\r\n    /// @notice Returns if the tax is enabled or not. Tax only exists on market pairs.\r\n    function isTaxEnabled() external view returns (bool) {\r\n        return _isTaxEnabled;\r\n    }\r\n\r\n    /// @notice _update function overrides the _update function from the perent contract and contains logic for tax and tax distribution\r\n    /// @dev this override function will be called from the top level transfer and transferFrom function whenever user initates transfer or buy and sell happens\r\n    /// @dev this function breaks _mint. Use super._update instead.\r\n    /// @param from address from the amount will be transfered\r\n    /// @param to address to where the amount will be transfered\r\n    /// @param amount number of tokens to transfer\r\n    function _update(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal override {\r\n        // Parent ERC20 already checks that from/to are not zero address.\r\n\r\n        uint256 fromBalance = balanceOf(from);\r\n        require(\r\n            fromBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n\r\n        WalletState memory fromState = walletStates[from];\r\n        WalletState memory toState = walletStates[to];\r\n\r\n        bool isTaxExempt_ = (fromState.isExemptFromTax ||\r\n            toState.isExemptFromTax);\r\n\r\n        uint256 taxAmount;\r\n\r\n        if (fromState.isMarketPair || toState.isMarketPair) {\r\n            require(\r\n                isTradingOpen || msg.sender == owner() || tx.origin == owner(),\r\n                \"Token: Trading not open yet\"\r\n            );\r\n        }\r\n\r\n        if (toState.isMarketPair && isTaxExempt_ == false && _isTaxEnabled) {\r\n            taxAmount = (amount * sellTax) / 100;\r\n        } else {\r\n            taxAmount = 0;\r\n        }\r\n\r\n        if (taxAmount != 0 && _inSwap == false) {\r\n            super._update(from, to, amount - taxAmount);\r\n            super._update(from, address(this), taxAmount);\r\n        } else {\r\n            super._update(from, to, amount);\r\n        }\r\n    }\r\n\r\n    modifier lockTheSwap() {\r\n        _inSwap = true;\r\n        _;\r\n        _inSwap = false;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            OWNER FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Opens the trading, enabling taxes. Can only be called once.\r\n    function openTrading() external onlyOwner {\r\n        require(isTradingOpen == false, \"Trading already open\");\r\n\r\n        isTradingOpen = true;\r\n        sellTax = 10;\r\n\r\n        emit TradingOpen();\r\n    }\r\n\r\n    /// @notice Sets an address's tax exempt status.\r\n    function setTaxExempt(address account, bool isExempt) external onlyOwner {\r\n        require(account != address(this), \"Can't change contract\");\r\n        WalletState memory state = walletStates[account];\r\n        state.isExemptFromTax = isExempt;\r\n        walletStates[account] = state;\r\n        emit ExcludedFromFeesUpdated(account, isExempt);\r\n    }\r\n\r\n    /// @notice Set the receiver of platform taxes.\r\n    function setTaxAddress(address newProtocolAddress_) external onlyOwner {\r\n        protocolAddress = newProtocolAddress_;\r\n        emit ProtocolAddressUpdated(newProtocolAddress_);\r\n    }\r\n\r\n    function setMarketPair(address account, bool value) public onlyOwner {\r\n        require(account != address(this), \"cant change contract\");\r\n        WalletState memory state = walletStates[account];\r\n        state.isMarketPair = value;\r\n        walletStates[account] = state;\r\n        emit MarketPairUpdated(account, value);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Baby\\staking-contract\\contracts\\Token.sol",
  "ast": {
    "absolutePath": "project:/contracts/Token.sol",
    "exportedSymbols": {
      "Address": [
        1528
      ],
      "Context": [
        1558
      ],
      "ERC20": [
        799
      ],
      "ERC20Burnable": [
        923
      ],
      "IERC20": [
        877
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        949
      ],
      "IERC20Permit": [
        985
      ],
      "IUniswapV2Factory": [
        1621
      ],
      "IUniswapV2Router01": [
        1929
      ],
      "IUniswapV2Router02": [
        2017
      ],
      "Ownable": [
        147
      ],
      "SafeERC20": [
        1275
      ],
      "Token": [
        4555
      ]
    },
    "id": 4556,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4053,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4054,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4556,
        "sourceUnit": 800,
        "src": "61:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4055,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4556,
        "sourceUnit": 1276,
        "src": "118:65:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 4056,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4556,
        "sourceUnit": 924,
        "src": "185:74:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4057,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4556,
        "sourceUnit": 148,
        "src": "261:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
        "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
        "id": 4058,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4556,
        "sourceUnit": 2018,
        "src": "315:75:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "id": 4059,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4556,
        "sourceUnit": 1622,
        "src": "392:69:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4060,
              "name": "ERC20",
              "nameLocations": [
                "483:5:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 799,
              "src": "483:5:14"
            },
            "id": 4061,
            "nodeType": "InheritanceSpecifier",
            "src": "483:5:14"
          },
          {
            "baseName": {
              "id": 4062,
              "name": "Ownable",
              "nameLocations": [
                "490:7:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "490:7:14"
            },
            "id": 4063,
            "nodeType": "InheritanceSpecifier",
            "src": "490:7:14"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4555,
        "linearizedBaseContracts": [
          4555,
          147,
          799,
          189,
          949,
          877,
          1558
        ],
        "name": "Token",
        "nameLocation": "474:5:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 4067,
            "libraryName": {
              "id": 4064,
              "name": "SafeERC20",
              "nameLocations": [
                "511:9:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1275,
              "src": "511:9:14"
            },
            "nodeType": "UsingForDirective",
            "src": "505:27:14",
            "typeName": {
              "id": 4066,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4065,
                "name": "IERC20",
                "nameLocations": [
                  "525:6:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 877,
                "src": "525:6:14"
              },
              "referencedDeclaration": 877,
              "src": "525:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$877",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "Token.WalletState",
            "id": 4072,
            "members": [
              {
                "constant": false,
                "id": 4069,
                "mutability": "mutable",
                "name": "isMarketPair",
                "nameLocation": "756:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 4072,
                "src": "751:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4068,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "751:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4071,
                "mutability": "mutable",
                "name": "isExemptFromTax",
                "nameLocation": "784:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 4072,
                "src": "779:20:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4070,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "779:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "WalletState",
            "nameLocation": "728:11:14",
            "nodeType": "StructDefinition",
            "scope": 4555,
            "src": "721:86:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "98962f36",
            "id": 4077,
            "mutability": "mutable",
            "name": "walletStates",
            "nameLocation": "871:12:14",
            "nodeType": "VariableDeclaration",
            "scope": 4555,
            "src": "832:51:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
              "typeString": "mapping(address => struct Token.WalletState)"
            },
            "typeName": {
              "id": 4076,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4073,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "832:31:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                "typeString": "mapping(address => struct Token.WalletState)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4075,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4074,
                  "name": "WalletState",
                  "nameLocations": [
                    "851:11:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4072,
                  "src": "851:11:14"
                },
                "referencedDeclaration": 4072,
                "src": "851:11:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_WalletState_$4072_storage_ptr",
                  "typeString": "struct Token.WalletState"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc1776d3",
            "id": 4080,
            "mutability": "mutable",
            "name": "sellTax",
            "nameLocation": "996:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 4555,
            "src": "983:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4078,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "983:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 4079,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1006:2:14",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4083,
            "mutability": "mutable",
            "name": "_isTaxEnabled",
            "nameLocation": "1091:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 4555,
            "src": "1078:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4081,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1078:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 4082,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1107:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "56a060a2",
            "id": 4086,
            "mutability": "mutable",
            "name": "isTradingOpen",
            "nameLocation": "1370:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 4555,
            "src": "1358:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4084,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1358:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 4085,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1386:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4089,
            "mutability": "mutable",
            "name": "_inSwap",
            "nameLocation": "1413:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 4555,
            "src": "1400:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4087,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1400:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 4088,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1423:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "1694505e",
            "id": 4092,
            "mutability": "mutable",
            "name": "uniswapV2Router",
            "nameLocation": "1642:15:14",
            "nodeType": "VariableDeclaration",
            "scope": 4555,
            "src": "1616:41:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 4091,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4090,
                "name": "IUniswapV2Router02",
                "nameLocations": [
                  "1616:18:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2017,
                "src": "1616:18:14"
              },
              "referencedDeclaration": 2017,
              "src": "1616:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0676c1b7",
            "id": 4094,
            "mutability": "mutable",
            "name": "protocolAddress",
            "nameLocation": "1956:15:14",
            "nodeType": "VariableDeclaration",
            "scope": 4555,
            "src": "1941:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4093,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1941:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "e4cbcfb1a60e2c589f335f74c6c57b0be57eb6c50eb56442d8a67735dba70cad",
            "id": 4100,
            "name": "ExcludedFromFeesUpdated",
            "nameLocation": "2164:23:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4096,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "2196:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4100,
                  "src": "2188:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4098,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isExcluded",
                  "nameLocation": "2209:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4100,
                  "src": "2204:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4097,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2187:33:14"
            },
            "src": "2158:63:14"
          },
          {
            "anonymous": false,
            "eventSelector": "160ff69a72bc70f3e792a86c87d27070e421562197f032d96bcab11c5010222e",
            "id": 4106,
            "name": "MarketPairUpdated",
            "nameLocation": "2233:17:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "2259:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4106,
                  "src": "2251:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4104,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isMarketPair",
                  "nameLocation": "2270:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4106,
                  "src": "2265:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2250:33:14"
            },
            "src": "2227:57:14"
          },
          {
            "anonymous": false,
            "eventSelector": "725168acf8fb2c310e106a05c2eed321da0de2fc4cf73dfe2594ca1d4795fd10",
            "id": 4110,
            "name": "ProtocolAddressUpdated",
            "nameLocation": "2298:22:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newProtocolAddress",
                  "nameLocation": "2329:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4110,
                  "src": "2321:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2320:28:14"
            },
            "src": "2292:57:14"
          },
          {
            "anonymous": false,
            "eventSelector": "08fd3d05bd9c1e39a2044b0a4e2fed4621113adaeeae8fc57e9f4a06777ecf07",
            "id": 4112,
            "name": "TradingOpen",
            "nameLocation": "2363:11:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2374:2:14"
            },
            "src": "2357:20:14"
          },
          {
            "body": {
              "id": 4245,
              "nodeType": "Block",
              "src": "2623:1398:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2656:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2648:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2648:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2648:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2660:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2664:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2660:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000000"
                            },
                            "id": 4136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "315f3030305f3030305f303030",
                              "id": 4132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2673:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000_by_1",
                                "typeString": "int_const 1000000000"
                              },
                              "value": "1_000_000_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 4135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 4133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2689:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 4134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2695:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "2689:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "2673:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000000000"
                            }
                          }
                        ],
                        "id": 4137,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2672:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4123,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2634:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Token_$4555_$",
                          "typeString": "type(contract super Token)"
                        }
                      },
                      "id": 4125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2640:7:14",
                      "memberName": "_update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 606,
                      "src": "2634:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2634:65:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4139,
                  "nodeType": "ExpressionStatement",
                  "src": "2634:65:14"
                },
                {
                  "assignments": [
                    4141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4141,
                      "mutability": "mutable",
                      "name": "uniswapV2Router02Address",
                      "nameLocation": "2720:24:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4245,
                      "src": "2712:32:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4140,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2712:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4143,
                  "initialValue": {
                    "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                    "id": 4142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2747:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2712:77:14"
                },
                {
                  "assignments": [
                    4146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4146,
                      "mutability": "mutable",
                      "name": "_uniswapV2Router",
                      "nameLocation": "2819:16:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4245,
                      "src": "2800:35:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                        "typeString": "contract IUniswapV2Router02"
                      },
                      "typeName": {
                        "id": 4145,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4144,
                          "name": "IUniswapV2Router02",
                          "nameLocations": [
                            "2800:18:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2017,
                          "src": "2800:18:14"
                        },
                        "referencedDeclaration": 2017,
                        "src": "2800:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4148,
                        "name": "uniswapV2Router02Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "2871:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4147,
                      "name": "IUniswapV2Router02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2017,
                      "src": "2838:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2017_$",
                        "typeString": "type(contract IUniswapV2Router02)"
                      }
                    },
                    "id": 4149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2838:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2800:106:14"
                },
                {
                  "assignments": [
                    4152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4152,
                      "mutability": "mutable",
                      "name": "uniswapV2Pair",
                      "nameLocation": "3001:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4245,
                      "src": "2993:21:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4151,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2993:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4167,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4161,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3096:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 4160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3088:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4159,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3088:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3088:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4163,
                            "name": "_uniswapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4146,
                            "src": "3103:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "id": 4164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3120:4:14",
                          "memberName": "WETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1633,
                          "src": "3103:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                            "typeString": "function () pure external returns (address)"
                          }
                        },
                        "id": 4165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3103:23:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 4154,
                                "name": "_uniswapV2Router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4146,
                                "src": "3035:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                                  "typeString": "contract IUniswapV2Router02"
                                }
                              },
                              "id": 4155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3052:7:14",
                              "memberName": "factory",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1628,
                              "src": "3035:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                "typeString": "function () pure external returns (address)"
                              }
                            },
                            "id": 4156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3035:26:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4153,
                          "name": "IUniswapV2Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1621,
                          "src": "3017:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1621_$",
                            "typeString": "type(contract IUniswapV2Factory)"
                          }
                        },
                        "id": 4157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3017:45:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Factory_$1621",
                          "typeString": "contract IUniswapV2Factory"
                        }
                      },
                      "id": 4158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3077:10:14",
                      "memberName": "createPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1610,
                      "src": "3017:70:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) external returns (address)"
                      }
                    },
                    "id": 4166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3017:110:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2993:134:14"
                },
                {
                  "expression": {
                    "id": 4170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4168,
                      "name": "uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4092,
                      "src": "3138:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4169,
                      "name": "_uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4146,
                      "src": "3156:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "3138:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$2017",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 4171,
                  "nodeType": "ExpressionStatement",
                  "src": "3138:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4175,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3200:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 4174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3192:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4173,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3192:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3192:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4177,
                        "name": "uniswapV2Router02Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "3207:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3238:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 4179,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3238:7:14",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 4178,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "3233:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3233:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 4182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3247:3:14",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3233:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4172,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        690,
                        750
                      ],
                      "referencedDeclaration": 690,
                      "src": "3183:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4184,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:68:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4186,
                        "name": "uniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4152,
                        "src": "3276:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3291:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4185,
                      "name": "setMarketPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4554,
                      "src": "3262:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:34:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4189,
                  "nodeType": "ExpressionStatement",
                  "src": "3262:34:14"
                },
                {
                  "expression": {
                    "id": 4193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4190,
                      "name": "protocolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4094,
                      "src": "3309:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4191,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3327:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3331:6:14",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3327:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3309:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4194,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:28:14"
                },
                {
                  "expression": {
                    "id": 4203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4195,
                        "name": "walletStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "3421:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                          "typeString": "mapping(address => struct Token.WalletState storage ref)"
                        }
                      },
                      "id": 4198,
                      "indexExpression": {
                        "expression": {
                          "id": 4196,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3434:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3438:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3434:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3421:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                        "typeString": "struct Token.WalletState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 4200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3489:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 4201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3526:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 4199,
                        "name": "WalletState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4072,
                        "src": "3448:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_WalletState_$4072_storage_ptr_$",
                          "typeString": "type(struct Token.WalletState storage pointer)"
                        }
                      },
                      "id": 4202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3475:12:14",
                        "3509:15:14"
                      ],
                      "names": [
                        "isMarketPair",
                        "isExemptFromTax"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3448:94:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState memory"
                      }
                    },
                    "src": "3421:121:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "id": 4204,
                  "nodeType": "ExpressionStatement",
                  "src": "3421:121:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3582:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3586:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3582:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3594:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4205,
                      "name": "ExcludedFromFeesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4100,
                      "src": "3558:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3558:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4210,
                  "nodeType": "EmitStatement",
                  "src": "3553:46:14"
                },
                {
                  "expression": {
                    "id": 4221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4211,
                        "name": "walletStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "3610:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                          "typeString": "mapping(address => struct Token.WalletState storage ref)"
                        }
                      },
                      "id": 4216,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 4214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3631:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 4213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3623:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3623:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3623:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3610:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                        "typeString": "struct Token.WalletState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 4218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3681:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 4219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3718:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 4217,
                        "name": "WalletState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4072,
                        "src": "3640:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_WalletState_$4072_storage_ptr_$",
                          "typeString": "type(struct Token.WalletState storage pointer)"
                        }
                      },
                      "id": 4220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3667:12:14",
                        "3701:15:14"
                      ],
                      "names": [
                        "isMarketPair",
                        "isExemptFromTax"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3640:94:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState memory"
                      }
                    },
                    "src": "3610:124:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "id": 4222,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:124:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4226,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3784:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$4555",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 4225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3776:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3776:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3776:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3791:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4223,
                      "name": "ExcludedFromFeesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4100,
                      "src": "3752:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3752:44:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4230,
                  "nodeType": "EmitStatement",
                  "src": "3747:49:14"
                },
                {
                  "expression": {
                    "id": 4238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4231,
                        "name": "walletStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "3807:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                          "typeString": "mapping(address => struct Token.WalletState storage ref)"
                        }
                      },
                      "id": 4233,
                      "indexExpression": {
                        "id": 4232,
                        "name": "uniswapV2Router02Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "3820:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3807:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                        "typeString": "struct Token.WalletState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3889:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 4236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3926:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 4234,
                        "name": "WalletState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4072,
                        "src": "3848:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_WalletState_$4072_storage_ptr_$",
                          "typeString": "type(struct Token.WalletState storage pointer)"
                        }
                      },
                      "id": 4237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3875:12:14",
                        "3909:15:14"
                      ],
                      "names": [
                        "isMarketPair",
                        "isExemptFromTax"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3848:94:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState memory"
                      }
                    },
                    "src": "3807:135:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "id": 4239,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:135:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4241,
                        "name": "uniswapV2Router02Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "3982:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4008:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4240,
                      "name": "ExcludedFromFeesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4100,
                      "src": "3958:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:55:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4244,
                  "nodeType": "EmitStatement",
                  "src": "3953:60:14"
                }
              ]
            },
            "id": 4246,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e",
                    "id": 4115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2587:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                      "typeString": "literal_string \"Token\""
                    },
                    "value": "Token"
                  },
                  {
                    "hexValue": "544b4e",
                    "id": 4116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2596:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                      "typeString": "literal_string \"TKN\""
                    },
                    "value": "TKN"
                  }
                ],
                "id": 4117,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4114,
                  "name": "ERC20",
                  "nameLocations": [
                    "2581:5:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "2581:5:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2581:21:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 4119,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2611:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 4120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2615:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2611:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4121,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4118,
                  "name": "Ownable",
                  "nameLocations": [
                    "2603:7:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "2603:7:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2603:19:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2578:2:14"
            },
            "returnParameters": {
              "id": 4122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2623:0:14"
            },
            "scope": 4555,
            "src": "2567:1454:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4249,
              "nodeType": "Block",
              "src": "4056:2:14",
              "statements": []
            },
            "id": 4250,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4036:2:14"
            },
            "returnParameters": {
              "id": 4248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4056:0:14"
            },
            "scope": 4555,
            "src": "4029:29:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4263,
              "nodeType": "Block",
              "src": "4195:64:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 4258,
                        "name": "walletStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "4213:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                          "typeString": "mapping(address => struct Token.WalletState storage ref)"
                        }
                      },
                      "id": 4260,
                      "indexExpression": {
                        "id": 4259,
                        "name": "account_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4253,
                        "src": "4226:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4213:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                        "typeString": "struct Token.WalletState storage ref"
                      }
                    },
                    "id": 4261,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4236:15:14",
                    "memberName": "isExemptFromTax",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4071,
                    "src": "4213:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4257,
                  "id": 4262,
                  "nodeType": "Return",
                  "src": "4206:45:14"
                }
              ]
            },
            "documentation": {
              "id": 4251,
              "nodeType": "StructuredDocumentation",
              "src": "4066:55:14",
              "text": "@notice Returns if an address is excluded from tax."
            },
            "functionSelector": "16c2be6b",
            "id": 4264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTaxExempt",
            "nameLocation": "4136:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4253,
                  "mutability": "mutable",
                  "name": "account_",
                  "nameLocation": "4156:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4264,
                  "src": "4148:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4148:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4147:18:14"
            },
            "returnParameters": {
              "id": 4257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4264,
                  "src": "4189:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4189:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4188:6:14"
            },
            "scope": 4555,
            "src": "4127:132:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4272,
              "nodeType": "Block",
              "src": "4408:39:14",
              "statements": [
                {
                  "expression": {
                    "id": 4270,
                    "name": "_isTaxEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4083,
                    "src": "4426:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4269,
                  "id": 4271,
                  "nodeType": "Return",
                  "src": "4419:20:14"
                }
              ]
            },
            "documentation": {
              "id": 4265,
              "nodeType": "StructuredDocumentation",
              "src": "4267:82:14",
              "text": "@notice Returns if the tax is enabled or not. Tax only exists on market pairs."
            },
            "functionSelector": "e6c1909b",
            "id": 4273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTaxEnabled",
            "nameLocation": "4364:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4376:2:14"
            },
            "returnParameters": {
              "id": 4269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4273,
                  "src": "4402:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4267,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4401:6:14"
            },
            "scope": 4555,
            "src": "4355:92:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              606
            ],
            "body": {
              "id": 4410,
              "nodeType": "Block",
              "src": "5117:1178:14",
              "statements": [
                {
                  "assignments": [
                    4285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4285,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "5213:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4410,
                      "src": "5205:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4284,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5205:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4289,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4287,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4276,
                        "src": "5237:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4286,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "5227:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5227:15:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5205:37:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4291,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4285,
                          "src": "5275:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4292,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4280,
                          "src": "5290:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5275:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 4294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5311:40:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 4290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5253:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5253:109:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4296,
                  "nodeType": "ExpressionStatement",
                  "src": "5253:109:14"
                },
                {
                  "assignments": [
                    4299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4299,
                      "mutability": "mutable",
                      "name": "fromState",
                      "nameLocation": "5394:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4410,
                      "src": "5375:28:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState"
                      },
                      "typeName": {
                        "id": 4298,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4297,
                          "name": "WalletState",
                          "nameLocations": [
                            "5375:11:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4072,
                          "src": "5375:11:14"
                        },
                        "referencedDeclaration": 4072,
                        "src": "5375:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_storage_ptr",
                          "typeString": "struct Token.WalletState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4303,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4300,
                      "name": "walletStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4077,
                      "src": "5406:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                        "typeString": "mapping(address => struct Token.WalletState storage ref)"
                      }
                    },
                    "id": 4302,
                    "indexExpression": {
                      "id": 4301,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "5419:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5406:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5375:49:14"
                },
                {
                  "assignments": [
                    4306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4306,
                      "mutability": "mutable",
                      "name": "toState",
                      "nameLocation": "5454:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4410,
                      "src": "5435:26:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState"
                      },
                      "typeName": {
                        "id": 4305,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4304,
                          "name": "WalletState",
                          "nameLocations": [
                            "5435:11:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4072,
                          "src": "5435:11:14"
                        },
                        "referencedDeclaration": 4072,
                        "src": "5435:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_storage_ptr",
                          "typeString": "struct Token.WalletState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4310,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4307,
                      "name": "walletStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4077,
                      "src": "5464:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                        "typeString": "mapping(address => struct Token.WalletState storage ref)"
                      }
                    },
                    "id": 4309,
                    "indexExpression": {
                      "id": 4308,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4278,
                      "src": "5477:2:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5464:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5435:45:14"
                },
                {
                  "assignments": [
                    4312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4312,
                      "mutability": "mutable",
                      "name": "isTaxExempt_",
                      "nameLocation": "5498:12:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4410,
                      "src": "5493:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4311,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5493:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4319,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4313,
                            "name": "fromState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4299,
                            "src": "5514:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                              "typeString": "struct Token.WalletState memory"
                            }
                          },
                          "id": 4314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5524:15:14",
                          "memberName": "isExemptFromTax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4071,
                          "src": "5514:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "id": 4315,
                            "name": "toState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4306,
                            "src": "5556:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                              "typeString": "struct Token.WalletState memory"
                            }
                          },
                          "id": 4316,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5564:15:14",
                          "memberName": "isExemptFromTax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4071,
                          "src": "5556:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5514:65:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 4318,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5513:67:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5493:87:14"
                },
                {
                  "assignments": [
                    4321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4321,
                      "mutability": "mutable",
                      "name": "taxAmount",
                      "nameLocation": "5601:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4410,
                      "src": "5593:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4320,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5593:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4322,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5593:17:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4323,
                        "name": "fromState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4299,
                        "src": "5627:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                          "typeString": "struct Token.WalletState memory"
                        }
                      },
                      "id": 4324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5637:12:14",
                      "memberName": "isMarketPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4069,
                      "src": "5627:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "expression": {
                        "id": 4325,
                        "name": "toState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4306,
                        "src": "5653:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                          "typeString": "struct Token.WalletState memory"
                        }
                      },
                      "id": 4326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5661:12:14",
                      "memberName": "isMarketPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4069,
                      "src": "5653:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5627:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4346,
                  "nodeType": "IfStatement",
                  "src": "5623:230:14",
                  "trueBody": {
                    "id": 4345,
                    "nodeType": "Block",
                    "src": "5675:178:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 4341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 4335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4329,
                                  "name": "isTradingOpen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4086,
                                  "src": "5716:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 4334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 4330,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "5733:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5737:6:14",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5733:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 4332,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67,
                                      "src": "5747:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 4333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5747:7:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5733:21:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5716:38:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4336,
                                    "name": "tx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967270,
                                    "src": "5758:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_transaction",
                                      "typeString": "tx"
                                    }
                                  },
                                  "id": 4337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5761:6:14",
                                  "memberName": "origin",
                                  "nodeType": "MemberAccess",
                                  "src": "5758:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 4338,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "5771:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 4339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5771:7:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5758:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5716:62:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e3a2054726164696e67206e6f74206f70656e20796574",
                              "id": 4342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5797:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367",
                                "typeString": "literal_string \"Token: Trading not open yet\""
                              },
                              "value": "Token: Trading not open yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df2a3d5791a0ba36ae595df955c97b858d6b2a33999ce0e4cae4afc82e04a367",
                                "typeString": "literal_string \"Token: Trading not open yet\""
                              }
                            ],
                            "id": 4328,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5690:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5690:151:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4344,
                        "nodeType": "ExpressionStatement",
                        "src": "5690:151:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 4352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 4347,
                          "name": "toState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4306,
                          "src": "5869:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                            "typeString": "struct Token.WalletState memory"
                          }
                        },
                        "id": 4348,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5877:12:14",
                        "memberName": "isMarketPair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4069,
                        "src": "5869:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4349,
                          "name": "isTaxExempt_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4312,
                          "src": "5893:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 4350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5909:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5893:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5869:45:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 4353,
                      "name": "_isTaxEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4083,
                      "src": "5918:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5869:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4369,
                    "nodeType": "Block",
                    "src": "6002:40:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4365,
                            "name": "taxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4321,
                            "src": "6017:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 4366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6029:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6017:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4368,
                        "nodeType": "ExpressionStatement",
                        "src": "6017:13:14"
                      }
                    ]
                  },
                  "id": 4370,
                  "nodeType": "IfStatement",
                  "src": "5865:177:14",
                  "trueBody": {
                    "id": 4364,
                    "nodeType": "Block",
                    "src": "5933:63:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4355,
                            "name": "taxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4321,
                            "src": "5948:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4356,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4280,
                                    "src": "5961:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 4357,
                                    "name": "sellTax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4080,
                                    "src": "5970:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "5961:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 4359,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5960:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 4360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5981:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5960:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5948:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4363,
                        "nodeType": "ExpressionStatement",
                        "src": "5948:36:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4371,
                        "name": "taxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4321,
                        "src": "6058:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6071:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6058:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 4376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4374,
                        "name": "_inSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4089,
                        "src": "6076:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 4375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6087:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "6076:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6058:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4408,
                    "nodeType": "Block",
                    "src": "6230:58:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4403,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4276,
                              "src": "6259:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4404,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4278,
                              "src": "6265:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4405,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4280,
                              "src": "6269:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4400,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6245:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Token_$4555_$",
                                "typeString": "type(contract super Token)"
                              }
                            },
                            "id": 4402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6251:7:14",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 606,
                            "src": "6245:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 4406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6245:31:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4407,
                        "nodeType": "ExpressionStatement",
                        "src": "6245:31:14"
                      }
                    ]
                  },
                  "id": 4409,
                  "nodeType": "IfStatement",
                  "src": "6054:234:14",
                  "trueBody": {
                    "id": 4399,
                    "nodeType": "Block",
                    "src": "6094:130:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4381,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4276,
                              "src": "6123:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4382,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4278,
                              "src": "6129:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4383,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4280,
                                "src": "6133:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 4384,
                                "name": "taxAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4321,
                                "src": "6142:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6133:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4378,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6109:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Token_$4555_$",
                                "typeString": "type(contract super Token)"
                              }
                            },
                            "id": 4380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6115:7:14",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 606,
                            "src": "6109:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 4386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6109:43:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4387,
                        "nodeType": "ExpressionStatement",
                        "src": "6109:43:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4391,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4276,
                              "src": "6181:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4394,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6195:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Token_$4555",
                                    "typeString": "contract Token"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Token_$4555",
                                    "typeString": "contract Token"
                                  }
                                ],
                                "id": 4393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6187:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4392,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6187:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6187:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4396,
                              "name": "taxAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4321,
                              "src": "6202:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4388,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6167:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Token_$4555_$",
                                "typeString": "type(contract super Token)"
                              }
                            },
                            "id": 4390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6173:7:14",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 606,
                            "src": "6167:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 4397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6167:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4398,
                        "nodeType": "ExpressionStatement",
                        "src": "6167:45:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4274,
              "nodeType": "StructuredDocumentation",
              "src": "4455:545:14",
              "text": "@notice _update function overrides the _update function from the perent contract and contains logic for tax and tax distribution\n @dev this override function will be called from the top level transfer and transferFrom function whenever user initates transfer or buy and sell happens\n @dev this function breaks _mint. Use super._update instead.\n @param from address from the amount will be transfered\n @param to address to where the amount will be transfered\n @param amount number of tokens to transfer"
            },
            "id": 4411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_update",
            "nameLocation": "5015:7:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4282,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5108:8:14"
            },
            "parameters": {
              "id": 4281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4276,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5041:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4411,
                  "src": "5033:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5033:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4278,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5064:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4411,
                  "src": "5056:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5056:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4280,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5085:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4411,
                  "src": "5077:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5022:76:14"
            },
            "returnParameters": {
              "id": 4283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5117:0:14"
            },
            "scope": 4555,
            "src": "5006:1289:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4422,
              "nodeType": "Block",
              "src": "6326:71:14",
              "statements": [
                {
                  "expression": {
                    "id": 4415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4413,
                      "name": "_inSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4089,
                      "src": "6337:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6347:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6337:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4416,
                  "nodeType": "ExpressionStatement",
                  "src": "6337:14:14"
                },
                {
                  "id": 4417,
                  "nodeType": "PlaceholderStatement",
                  "src": "6362:1:14"
                },
                {
                  "expression": {
                    "id": 4420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4418,
                      "name": "_inSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4089,
                      "src": "6374:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6384:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6374:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4421,
                  "nodeType": "ExpressionStatement",
                  "src": "6374:15:14"
                }
              ]
            },
            "id": 4423,
            "name": "lockTheSwap",
            "nameLocation": "6312:11:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6323:2:14"
            },
            "src": "6303:94:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4447,
              "nodeType": "Block",
              "src": "6711:161:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4430,
                          "name": "isTradingOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4086,
                          "src": "6730:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 4431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6747:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6730:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164696e6720616c7265616479206f70656e",
                        "id": 4433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6754:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c",
                          "typeString": "literal_string \"Trading already open\""
                        },
                        "value": "Trading already open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cc8d35069a0492c28ac21213145e5077a2a1c0584668aa625fceb1716ff9e9c",
                          "typeString": "literal_string \"Trading already open\""
                        }
                      ],
                      "id": 4429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6722:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6722:55:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4435,
                  "nodeType": "ExpressionStatement",
                  "src": "6722:55:14"
                },
                {
                  "expression": {
                    "id": 4438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4436,
                      "name": "isTradingOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4086,
                      "src": "6790:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6806:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6790:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4439,
                  "nodeType": "ExpressionStatement",
                  "src": "6790:20:14"
                },
                {
                  "expression": {
                    "id": 4442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4440,
                      "name": "sellTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4080,
                      "src": "6821:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 4441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6831:2:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "6821:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4443,
                  "nodeType": "ExpressionStatement",
                  "src": "6821:12:14"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4444,
                      "name": "TradingOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4112,
                      "src": "6851:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6851:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4446,
                  "nodeType": "EmitStatement",
                  "src": "6846:18:14"
                }
              ]
            },
            "documentation": {
              "id": 4424,
              "nodeType": "StructuredDocumentation",
              "src": "6592:71:14",
              "text": "@notice Opens the trading, enabling taxes. Can only be called once."
            },
            "functionSelector": "c9567bf9",
            "id": 4448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4427,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4426,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6701:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "6701:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6701:9:14"
              }
            ],
            "name": "openTrading",
            "nameLocation": "6678:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6689:2:14"
            },
            "returnParameters": {
              "id": 4428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6711:0:14"
            },
            "scope": 4555,
            "src": "6669:203:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4492,
              "nodeType": "Block",
              "src": "7007:277:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4459,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4451,
                          "src": "7026:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4462,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7045:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Token_$4555",
                                "typeString": "contract Token"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Token_$4555",
                                "typeString": "contract Token"
                              }
                            ],
                            "id": 4461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7037:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4460,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7037:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7037:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7026:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206368616e676520636f6e7472616374",
                        "id": 4465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7052:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59",
                          "typeString": "literal_string \"Can't change contract\""
                        },
                        "value": "Can't change contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_defa6ab9366199bf228c341cab8bca978ea45a4b8875532404fd2ca36569de59",
                          "typeString": "literal_string \"Can't change contract\""
                        }
                      ],
                      "id": 4458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7018:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7018:58:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4467,
                  "nodeType": "ExpressionStatement",
                  "src": "7018:58:14"
                },
                {
                  "assignments": [
                    4470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4470,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "7106:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4492,
                      "src": "7087:24:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState"
                      },
                      "typeName": {
                        "id": 4469,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4468,
                          "name": "WalletState",
                          "nameLocations": [
                            "7087:11:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4072,
                          "src": "7087:11:14"
                        },
                        "referencedDeclaration": 4072,
                        "src": "7087:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_storage_ptr",
                          "typeString": "struct Token.WalletState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4474,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4471,
                      "name": "walletStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4077,
                      "src": "7114:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                        "typeString": "mapping(address => struct Token.WalletState storage ref)"
                      }
                    },
                    "id": 4473,
                    "indexExpression": {
                      "id": 4472,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4451,
                      "src": "7127:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7114:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7087:48:14"
                },
                {
                  "expression": {
                    "id": 4479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4475,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4470,
                        "src": "7146:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                          "typeString": "struct Token.WalletState memory"
                        }
                      },
                      "id": 4477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7152:15:14",
                      "memberName": "isExemptFromTax",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4071,
                      "src": "7146:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4478,
                      "name": "isExempt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4453,
                      "src": "7170:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7146:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4480,
                  "nodeType": "ExpressionStatement",
                  "src": "7146:32:14"
                },
                {
                  "expression": {
                    "id": 4485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4481,
                        "name": "walletStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "7189:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                          "typeString": "mapping(address => struct Token.WalletState storage ref)"
                        }
                      },
                      "id": 4483,
                      "indexExpression": {
                        "id": 4482,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "7202:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7189:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                        "typeString": "struct Token.WalletState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4484,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4470,
                      "src": "7213:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState memory"
                      }
                    },
                    "src": "7189:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "id": 4486,
                  "nodeType": "ExpressionStatement",
                  "src": "7189:29:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4488,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "7258:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4489,
                        "name": "isExempt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4453,
                        "src": "7267:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4487,
                      "name": "ExcludedFromFeesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4100,
                      "src": "7234:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7234:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4491,
                  "nodeType": "EmitStatement",
                  "src": "7229:47:14"
                }
              ]
            },
            "documentation": {
              "id": 4449,
              "nodeType": "StructuredDocumentation",
              "src": "6880:48:14",
              "text": "@notice Sets an address's tax exempt status."
            },
            "functionSelector": "1dc61040",
            "id": 4493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4456,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4455,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6997:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "6997:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6997:9:14"
              }
            ],
            "name": "setTaxExempt",
            "nameLocation": "6943:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4451,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6964:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4493,
                  "src": "6956:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6956:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4453,
                  "mutability": "mutable",
                  "name": "isExempt",
                  "nameLocation": "6978:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4493,
                  "src": "6973:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6973:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6955:32:14"
            },
            "returnParameters": {
              "id": 4457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7007:0:14"
            },
            "scope": 4555,
            "src": "6934:350:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4509,
              "nodeType": "Block",
              "src": "7416:115:14",
              "statements": [
                {
                  "expression": {
                    "id": 4503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4501,
                      "name": "protocolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4094,
                      "src": "7427:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4502,
                      "name": "newProtocolAddress_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4496,
                      "src": "7445:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7427:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4504,
                  "nodeType": "ExpressionStatement",
                  "src": "7427:37:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4506,
                        "name": "newProtocolAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4496,
                        "src": "7503:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4505,
                      "name": "ProtocolAddressUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4110,
                      "src": "7480:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7480:43:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4508,
                  "nodeType": "EmitStatement",
                  "src": "7475:48:14"
                }
              ]
            },
            "documentation": {
              "id": 4494,
              "nodeType": "StructuredDocumentation",
              "src": "7292:47:14",
              "text": "@notice Set the receiver of platform taxes."
            },
            "functionSelector": "a1883d26",
            "id": 4510,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4499,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4498,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7406:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "7406:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7406:9:14"
              }
            ],
            "name": "setTaxAddress",
            "nameLocation": "7354:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4496,
                  "mutability": "mutable",
                  "name": "newProtocolAddress_",
                  "nameLocation": "7376:19:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4510,
                  "src": "7368:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7368:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7367:29:14"
            },
            "returnParameters": {
              "id": 4500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7416:0:14"
            },
            "scope": 4555,
            "src": "7345:186:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4553,
              "nodeType": "Block",
              "src": "7608:261:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4520,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4512,
                          "src": "7627:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4523,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7646:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Token_$4555",
                                "typeString": "contract Token"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Token_$4555",
                                "typeString": "contract Token"
                              }
                            ],
                            "id": 4522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7638:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4521,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7638:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7638:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7627:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e74206368616e676520636f6e7472616374",
                        "id": 4526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7653:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644",
                          "typeString": "literal_string \"cant change contract\""
                        },
                        "value": "cant change contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7530b86dda580fbf3b24526a06977900081fd05de5107de53fd0dfccf4fcd644",
                          "typeString": "literal_string \"cant change contract\""
                        }
                      ],
                      "id": 4519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7619:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7619:57:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4528,
                  "nodeType": "ExpressionStatement",
                  "src": "7619:57:14"
                },
                {
                  "assignments": [
                    4531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4531,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "7706:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4553,
                      "src": "7687:24:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState"
                      },
                      "typeName": {
                        "id": 4530,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4529,
                          "name": "WalletState",
                          "nameLocations": [
                            "7687:11:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4072,
                          "src": "7687:11:14"
                        },
                        "referencedDeclaration": 4072,
                        "src": "7687:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_storage_ptr",
                          "typeString": "struct Token.WalletState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4535,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4532,
                      "name": "walletStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4077,
                      "src": "7714:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                        "typeString": "mapping(address => struct Token.WalletState storage ref)"
                      }
                    },
                    "id": 4534,
                    "indexExpression": {
                      "id": 4533,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4512,
                      "src": "7727:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7714:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7687:48:14"
                },
                {
                  "expression": {
                    "id": 4540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4536,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4531,
                        "src": "7746:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                          "typeString": "struct Token.WalletState memory"
                        }
                      },
                      "id": 4538,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7752:12:14",
                      "memberName": "isMarketPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4069,
                      "src": "7746:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4539,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4514,
                      "src": "7767:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7746:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4541,
                  "nodeType": "ExpressionStatement",
                  "src": "7746:26:14"
                },
                {
                  "expression": {
                    "id": 4546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4542,
                        "name": "walletStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "7783:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WalletState_$4072_storage_$",
                          "typeString": "mapping(address => struct Token.WalletState storage ref)"
                        }
                      },
                      "id": 4544,
                      "indexExpression": {
                        "id": 4543,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4512,
                        "src": "7796:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7783:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                        "typeString": "struct Token.WalletState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4545,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4531,
                      "src": "7807:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WalletState_$4072_memory_ptr",
                        "typeString": "struct Token.WalletState memory"
                      }
                    },
                    "src": "7783:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WalletState_$4072_storage",
                      "typeString": "struct Token.WalletState storage ref"
                    }
                  },
                  "id": 4547,
                  "nodeType": "ExpressionStatement",
                  "src": "7783:29:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4549,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4512,
                        "src": "7846:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4550,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4514,
                        "src": "7855:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4548,
                      "name": "MarketPairUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4106,
                      "src": "7828:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7828:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4552,
                  "nodeType": "EmitStatement",
                  "src": "7823:38:14"
                }
              ]
            },
            "functionSelector": "c16dd4a4",
            "id": 4554,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4516,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7598:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "7598:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7598:9:14"
              }
            ],
            "name": "setMarketPair",
            "nameLocation": "7548:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4512,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7570:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4554,
                  "src": "7562:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7562:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4514,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7584:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4554,
                  "src": "7579:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4513,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7579:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7561:29:14"
            },
            "returnParameters": {
              "id": 4518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7608:0:14"
            },
            "scope": 4555,
            "src": "7539:330:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4556,
        "src": "465:7407:14",
        "usedErrors": [
          13,
          18,
          159,
          164,
          169,
          178,
          183,
          188
        ],
        "usedEvents": [
          24,
          811,
          820,
          4100,
          4106,
          4110,
          4112
        ]
      }
    ],
    "src": "33:7841:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-30T07:31:10.119Z",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isTaxEnabled()": {
        "notice": "Returns if the tax is enabled or not. Tax only exists on market pairs."
      },
      "isTaxExempt(address)": {
        "notice": "Returns if an address is excluded from tax."
      },
      "openTrading()": {
        "notice": "Opens the trading, enabling taxes. Can only be called once."
      },
      "setTaxAddress(address)": {
        "notice": "Set the receiver of platform taxes."
      },
      "setTaxExempt(address,bool)": {
        "notice": "Sets an address's tax exempt status."
      }
    },
    "version": 1
  }
}